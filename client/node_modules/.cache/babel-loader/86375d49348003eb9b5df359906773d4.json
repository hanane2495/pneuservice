{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Hanane\\\\pneu_service_final\\\\client\\\\src\\\\screens\\\\CentreMontage.js\";\nimport React, { useState, useEffect } from 'react';\nimport styled from 'styled-components';\nimport { InputGroup, FormControl, Button } from 'react-bootstrap';\nimport axios from 'axios';\nimport TextField from '@material-ui/core/TextField';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nconst filter = createFilterOptions(); //components\n\nimport Navbar from '../components/Navbar'; //images \n\nimport map from '../assets/map2.jpg';\nimport garage from '../assets/garage.jpg'; //icons\n\nimport { FiSearch } from 'react-icons/fi';\nconst Styles = styled.div`\n    height:100%;\n    display: grid;\n    grid-template-columns: 1fr repeat(12, minmax(auto, 4.2rem)) 1fr;\n    grid-template-rows:5.8rem 28.5rem 5rem;\n    gap : 0 2rem;\n\n    .navbar-item{\n        grid-column: 1 / span 14;\n        grid-row: 1 / 2;\n        z-index:10;\n    }\n    .promo-item{\n        grid-column: 1 / span 14;\n        grid-row: 1 / 4;\n        display:flex;\n        flex-direction:row;\n        justify-content:center;\n        align-items:center;\n    }\n    .promo-left-side{\n         display:flex;\n         width: 40%;\n         height: 100%;\n         background: -webkit-linear-gradient( rgba(0, 0, 0, 0.7) 100%,transparent 100%), url(${map});\n         background-size:cover;\n         align-items:center;\n         justify-content:flex-end;\n         box-shadow:50px rgba(0,0,0, 0.253);\n    }\n    .info-promo{\n       width:100%;\n       height: 100%;\n       display:flex;\n       flex-direction:column;\n       justify-content:center;\n       align-items:center;\n       color: white;\n    }\n    .promo-right-side{\n        display:flex;\n        width: 60%;\n        height: 100%;\n        background: -webkit-linear-gradient( rgba(0, 0, 0, 0.4) 100%,transparent 100%), url(${garage});\n        background-size:cover;\n        align-items:center;\n        justify-content:flex-start;\n    }\n    a{\n        color:white;\n        text-decoration:none;\n    }\n    .input-group {\n      width:80%;\n      height:9vh;\n      margin-bottom:10px;\n    }\n    .form-control{\n      height:100%;\n    }\n    #free-solo-demo{\n        background-color:#fff !important;\n    }\n\n    div.MuiAutocomplete-root{\n        width:90% !important;\n        background-color : #fff !important;\n        border-radius:3px !important;\n    }\n\n`;\n\nfunction CentreMentage() {\n  const [ville, setVille] = useState('Oran');\n  const [centreMontage, setCentreMontage] = useState([]);\n  const [villes, setVilles] = useState([{\n    ville: 'Oran '\n  }, {\n    ville: 'Alger'\n  }, {\n    ville: 'Tlemcen'\n  }, {\n    ville: 'Sidi-belabes'\n  }, {\n    ville: 'Mostaganem'\n  }, {\n    ville: 'Ain Temouchent'\n  }, {\n    ville: 'Mascara'\n  }, {\n    ville: 'Tiaret'\n  }, {\n    ville: 'El-chlef'\n  }, {\n    ville: 'Relizene'\n  }, {\n    ville: 'Saida'\n  }, {\n    ville: 'El-Eulma'\n  }, {\n    ville: 'Annaba'\n  }, {\n    ville: 'Constantine'\n  }, {\n    ville: 'Ourgla'\n  }]); //handle change from inputs\n\n  function handleChange(event) {\n    setVille(event.target.value);\n    console.log(event.target.value);\n  }\n\n  function handleSearch() {\n    axios.post(`${process.env.REACT_APP_API_URL}/get/centre/montage`, {\n      ville\n    }).then(res => {\n      console.log(res.data);\n      setCentreMontage(res.data);\n    }).catch(err => {\n      console.log(err);\n    });\n  }\n\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Styles, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"navbar-item\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Navbar, {\n    bg: \"none\",\n    variant: \"light\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"promo-item\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"promo-left-side\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"info-promo\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      width: '80%',\n      display: 'flex',\n      justifyContent: 'left'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"h5\", {\n    style: {\n      textAlign: 'left'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 32\n    }\n  }, \"Rechercher un centre de montage\")), /*#__PURE__*/React.createElement(InputGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Autocomplete, {\n    value: ville,\n    onChange: (event, newValue) => {\n      if (typeof newValue === 'string') {\n        setVille({\n          ville: newValue\n        });\n      } else if (newValue && newValue.inputValue) {\n        // Create a new ville from the user input\n        setVille({\n          ville: newValue.inputValue\n        });\n      } else {\n        setVille(newValue);\n      }\n    },\n    filterOptions: (options, params) => {\n      const filtered = filter(options, params); // Suggest the creation of a new ville\n\n      if (params.inputValue !== '') {\n        filtered.push({\n          inputValue: params.inputValue,\n          ville: `Add \"${params.inputValue}\"`\n        });\n      }\n\n      return filtered;\n    },\n    selectOnFocus: true,\n    clearOnBlur: true,\n    handleHomeEndKeys: true,\n    id: \"free-solo-with-text-demo\",\n    options: villes,\n    getOptionLabel: option => {\n      // ville selected with enter, right from the input\n      if (typeof option === 'string') {\n        return option;\n      } // Add \"xxx\" option created dynamically\n\n\n      if (option.inputValue) {\n        return option.inputValue;\n      } // Regular option\n\n\n      return option.ville;\n    },\n    renderOption: option => option.ville,\n    freeSolo: true,\n    renderInput: params => /*#__PURE__*/React.createElement(TextField, Object.assign({}, params, {\n      label: \"Ville (ex : Oran, Alger...)\",\n      variant: \"outlined\",\n      margin: \"none\",\n      style: {\n        padding: '0'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 37\n      }\n    })),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 29\n    }\n  }), /*#__PURE__*/React.createElement(InputGroup.Append, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    variant: \"outline-secondary\",\n    onClick: handleSearch,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 36\n    }\n  }, /*#__PURE__*/React.createElement(FiSearch, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 40\n    }\n  })))), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      width: '80%',\n      display: 'flex',\n      justifyContent: 'left'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"h9\", {\n    style: {\n      textAlign: 'center',\n      padding: '0 5px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 32\n    }\n  }, \"Trouver le centre de montage pneu qui vous convient parmi les meilleurs centres en Algerie...\")))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"promo-right-side\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 21\n    }\n  }))));\n}\n\nexport default CentreMentage;\n/**\r\n * <Autocomplete\r\n        id=\"free-solo-demo\"\r\n        options={villes.map((option) => option.ville)}\r\n        renderInput={(params) => (\r\n        <TextField InputProps={{ ...params.InputProps, type: 'search' }} placeholder=\"Ville (ex : Oran, Alger...)\" margin=\"none\" variant=\"outlined\" style={{padding:'0'}} ville={ville} onChange={handleChange}/>\r\n        )}\r\n    />\r\n * \r\n * \r\n */","map":{"version":3,"sources":["C:/Users/Hanane/pneu_service_final/client/src/screens/CentreMontage.js"],"names":["React","useState","useEffect","styled","InputGroup","FormControl","Button","axios","TextField","Autocomplete","filter","createFilterOptions","Navbar","map","garage","FiSearch","Styles","div","CentreMentage","ville","setVille","centreMontage","setCentreMontage","villes","setVilles","handleChange","event","target","value","console","log","handleSearch","post","process","env","REACT_APP_API_URL","then","res","data","catch","err","width","display","justifyContent","textAlign","newValue","inputValue","options","params","filtered","push","option","padding"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from 'react';\r\nimport styled from 'styled-components';\r\nimport {InputGroup, FormControl, Button} from 'react-bootstrap'\r\nimport axios from 'axios'\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\n\r\nconst filter = createFilterOptions();\r\n\r\n\r\n//components\r\nimport Navbar from '../components/Navbar'\r\n\r\n//images \r\nimport map from '../assets/map2.jpg'\r\nimport garage from '../assets/garage.jpg'\r\n\r\n//icons\r\nimport {FiSearch} from 'react-icons/fi'\r\nconst Styles = styled.div`\r\n    height:100%;\r\n    display: grid;\r\n    grid-template-columns: 1fr repeat(12, minmax(auto, 4.2rem)) 1fr;\r\n    grid-template-rows:5.8rem 28.5rem 5rem;\r\n    gap : 0 2rem;\r\n\r\n    .navbar-item{\r\n        grid-column: 1 / span 14;\r\n        grid-row: 1 / 2;\r\n        z-index:10;\r\n    }\r\n    .promo-item{\r\n        grid-column: 1 / span 14;\r\n        grid-row: 1 / 4;\r\n        display:flex;\r\n        flex-direction:row;\r\n        justify-content:center;\r\n        align-items:center;\r\n    }\r\n    .promo-left-side{\r\n         display:flex;\r\n         width: 40%;\r\n         height: 100%;\r\n         background: -webkit-linear-gradient( rgba(0, 0, 0, 0.7) 100%,transparent 100%), url(${map});\r\n         background-size:cover;\r\n         align-items:center;\r\n         justify-content:flex-end;\r\n         box-shadow:50px rgba(0,0,0, 0.253);\r\n    }\r\n    .info-promo{\r\n       width:100%;\r\n       height: 100%;\r\n       display:flex;\r\n       flex-direction:column;\r\n       justify-content:center;\r\n       align-items:center;\r\n       color: white;\r\n    }\r\n    .promo-right-side{\r\n        display:flex;\r\n        width: 60%;\r\n        height: 100%;\r\n        background: -webkit-linear-gradient( rgba(0, 0, 0, 0.4) 100%,transparent 100%), url(${garage});\r\n        background-size:cover;\r\n        align-items:center;\r\n        justify-content:flex-start;\r\n    }\r\n    a{\r\n        color:white;\r\n        text-decoration:none;\r\n    }\r\n    .input-group {\r\n      width:80%;\r\n      height:9vh;\r\n      margin-bottom:10px;\r\n    }\r\n    .form-control{\r\n      height:100%;\r\n    }\r\n    #free-solo-demo{\r\n        background-color:#fff !important;\r\n    }\r\n\r\n    div.MuiAutocomplete-root{\r\n        width:90% !important;\r\n        background-color : #fff !important;\r\n        border-radius:3px !important;\r\n    }\r\n\r\n`;\r\n\r\nfunction CentreMentage(){\r\n    const [ville, setVille] =useState('Oran')\r\n    const [centreMontage, setCentreMontage] = useState([])\r\n    const [villes, setVilles] = useState([\r\n        {ville : 'Oran '},\r\n        {ville : 'Alger'},\r\n        {ville : 'Tlemcen'},\r\n        {ville : 'Sidi-belabes'},\r\n        {ville : 'Mostaganem'},\r\n        {ville : 'Ain Temouchent'},\r\n        {ville : 'Mascara'},\r\n        {ville : 'Tiaret'},\r\n        {ville : 'El-chlef'},\r\n        {ville : 'Relizene'},\r\n        {ville : 'Saida'},\r\n        {ville : 'El-Eulma'},\r\n        {ville : 'Annaba'},\r\n        {ville : 'Constantine'},\r\n        {ville : 'Ourgla'}\r\n    ])\r\n\r\n    //handle change from inputs\r\n    function handleChange(event){\r\n        setVille(event.target.value)\r\n        console.log(event.target.value)\r\n    }\r\n\r\n    function handleSearch(){\r\n        axios.post(`${process.env.REACT_APP_API_URL}/get/centre/montage`, {\r\n            ville\r\n        })\r\n        .then(res => {\r\n            console.log(res.data)\r\n            setCentreMontage(res.data)\r\n        })\r\n        .catch(err => {\r\n            console.log(err)\r\n        })\r\n    }\r\n\r\n\r\n    return(\r\n        <React.Fragment>\r\n            <Styles>\r\n                <div className='navbar-item'>\r\n                    <Navbar bg=\"none\" variant=\"light\"/>\r\n                </div>\r\n                <div className='promo-item'>\r\n                    <div className='promo-left-side'>\r\n                        <div className='info-promo'>\r\n                            <div style={{width:'80%', display:'flex', justifyContent:'left'}}>\r\n                               <h5 style={{textAlign:'left'}}>Rechercher un centre de montage</h5>\r\n                            </div>\r\n                            <InputGroup >\r\n                            <Autocomplete\r\n                                value={ville}\r\n                                onChange={(event, newValue) => {\r\n                                    if (typeof newValue === 'string') {\r\n                                    setVille({\r\n                                        ville: newValue,\r\n                                    });\r\n                                    } else if (newValue && newValue.inputValue) {\r\n                                    // Create a new ville from the user input\r\n                                    setVille({\r\n                                        ville: newValue.inputValue,\r\n                                    });\r\n                                    } else {\r\n                                    setVille(newValue);\r\n                                    }\r\n                                }}\r\n                                filterOptions={(options, params) => {\r\n                                    const filtered = filter(options, params);\r\n\r\n                                    // Suggest the creation of a new ville\r\n                                    if (params.inputValue !== '') {\r\n                                    filtered.push({\r\n                                        inputValue: params.inputValue,\r\n                                        ville: `Add \"${params.inputValue}\"`,\r\n                                    });\r\n                                    }\r\n\r\n                                    return filtered;\r\n                                }}\r\n                                selectOnFocus\r\n                                clearOnBlur\r\n                                handleHomeEndKeys\r\n                                id=\"free-solo-with-text-demo\"\r\n                                options={villes}\r\n                                getOptionLabel={(option) => {\r\n                                    // ville selected with enter, right from the input\r\n                                    if (typeof option === 'string') {\r\n                                    return option;\r\n                                    }\r\n                                    // Add \"xxx\" option created dynamically\r\n                                    if (option.inputValue) {\r\n                                    return option.inputValue;\r\n                                    }\r\n                                    // Regular option\r\n                                    return option.ville;\r\n                                }}\r\n                                renderOption={(option) => option.ville}\r\n                                freeSolo\r\n                                renderInput={(params) => (\r\n                                    <TextField {...params} label=\"Ville (ex : Oran, Alger...)\" variant=\"outlined\" margin=\"none\" style={{padding:'0'}}/>\r\n                                )}\r\n                                />\r\n                                \r\n                                <InputGroup.Append>\r\n                                   <Button variant=\"outline-secondary\" onClick={handleSearch}>\r\n                                       <FiSearch/>\r\n                                    </Button>\r\n                                </InputGroup.Append>\r\n                            </InputGroup>\r\n                            <div style={{width:'80%', display:'flex', justifyContent:'left'}}>\r\n                               <h9 style={{textAlign:'center', padding:'0 5px'}}>Trouver le centre de montage pneu qui vous convient parmi les meilleurs centres en Algerie...</h9>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className='promo-right-side'>\r\n                    \r\n                    </div>\r\n                </div>\r\n            </Styles>           \r\n        </React.Fragment>\r\n    )\r\n}\r\nexport default CentreMentage; \r\n\r\n\r\n/**\r\n * <Autocomplete\r\n        id=\"free-solo-demo\"\r\n        options={villes.map((option) => option.ville)}\r\n        renderInput={(params) => (\r\n        <TextField InputProps={{ ...params.InputProps, type: 'search' }} placeholder=\"Ville (ex : Oran, Alger...)\" margin=\"none\" variant=\"outlined\" style={{padding:'0'}} ville={ville} onChange={handleChange}/>\r\n        )}\r\n    />\r\n * \r\n * \r\n */"]},"metadata":{},"sourceType":"module"}