{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = ReactSearchAutocomplete;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _fuse = _interopRequireDefault(require(\"fuse.js\"));\n\nvar _defaults = require(\"./defaults/defaults\");\n\nvar _Results = _interopRequireDefault(require(\"./Results/Results\"));\n\nvar _StyledReactSearchAutocomplete = require(\"./StyledReactSearchAutocomplete\");\n\nvar _SearchInput = _interopRequireDefault(require(\"./SearchInput/SearchInput\"));\n\nvar _styledComponents = require(\"styled-components\");\n\nvar _utils = require(\"./utils/utils\");\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    \"default\": obj\n  };\n}\n\nfunction _slicedToArray(arr, i) {\n  return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _nonIterableRest();\n}\n\nfunction _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance\");\n}\n\nfunction _iterableToArrayLimit(arr, i) {\n  if (!(Symbol.iterator in Object(arr) || Object.prototype.toString.call(arr) === \"[object Arguments]\")) {\n    return;\n  }\n\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}\n\nfunction _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nfunction ReactSearchAutocomplete(props) {\n  var items = props.items,\n      fuseOptions = props.fuseOptions,\n      useCaching = props.useCaching,\n      inputDebounce = props.inputDebounce,\n      onSearch = props.onSearch,\n      onSelect = props.onSelect,\n      onFocus = props.onFocus,\n      showIcon = props.showIcon,\n      maxResults = props.maxResults,\n      placeholder = props.placeholder,\n      autoFocus = props.autoFocus,\n      styling = props.styling;\n\n  var theme = _objectSpread({}, _defaults.defaultTheme, {}, styling);\n\n  var options = _objectSpread({}, _defaults.defaultFuseOptions, {}, fuseOptions);\n\n  var _React$useState = _react[\"default\"].useState(\"\"),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      searchString = _React$useState2[0],\n      setSearchString = _React$useState2[1];\n\n  var _React$useState3 = _react[\"default\"].useState(),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      results = _React$useState4[0],\n      setResults = _React$useState4[1];\n\n  _react[\"default\"].useEffect(function () {\n    if (useCaching) sessionStorage.clear();\n  }, [items]);\n\n  _react[\"default\"].useEffect(function () {\n    var keyword = searchString.toLowerCase();\n\n    if (keyword.length > 0) {\n      var fuse = new _fuse[\"default\"](items, options);\n      var newResults = fuse.search(searchString);\n\n      if (useCaching) {\n        if (keyword in sessionStorage) {\n          setResults(JSON.parse(sessionStorage.getItem(keyword)));\n        } else {\n          sessionStorage.setItem(keyword, JSON.stringify(newResults));\n          setResults(newResults);\n        }\n      } else {\n        setResults(newResults);\n      }\n    } else {\n      setResults([]);\n    }\n  }, [searchString, items, useCaching]); // This is used to debounce the onSearch props function\n\n\n  var debounceOnSearch = _react[\"default\"].useCallback(inputDebounce > 0 ? (0, _utils.debounce)(function (keyword, cached) {\n    return onSearch(keyword, cached);\n  }, inputDebounce) : function (keyword, cached) {\n    return onSearch(keyword, cached);\n  }, []);\n\n  var handleSetSearchString = function handleSetSearchString(event) {\n    setSearchString(event.target.value);\n    var keyword = event.target.value.toLowerCase();\n\n    if (useCaching) {\n      onSearch && debounceOnSearch(event.target.value, (0, _utils.isCached)(keyword));\n    } else {\n      onSearch && debounceOnSearch(event.target.value, false);\n    }\n  };\n\n  return _react[\"default\"].createElement(_styledComponents.ThemeProvider, {\n    theme: theme\n  }, _react[\"default\"].createElement(_defaults.GlobalStyle, null), _react[\"default\"].createElement(_StyledReactSearchAutocomplete.StyledReactSearchAutocomplete, null, _react[\"default\"].createElement(\"div\", {\n    className: \"wrapper\"\n  }, _react[\"default\"].createElement(_SearchInput[\"default\"], {\n    searchString: searchString,\n    setSearchString: handleSetSearchString,\n    autoFocus: autoFocus,\n    onBlur: function onBlur() {\n      return setResults([]);\n    },\n    onFocus: onFocus,\n    placeholder: placeholder,\n    showIcon: showIcon\n  }), _react[\"default\"].createElement(_Results[\"default\"], {\n    results: results,\n    onClick: onSelect,\n    setSearchString: setSearchString,\n    showIcon: showIcon,\n    maxResults: maxResults\n  }))));\n}\n\nReactSearchAutocomplete.defaultProps = {\n  items: [],\n  fuseOptions: _defaults.defaultFuseOptions,\n  useCaching: true,\n  inputDebounce: 200,\n  showIcon: true,\n  maxResults: 10,\n  placeholder: \"\",\n  autoFocus: false,\n  styling: {}\n};\nReactSearchAutocomplete.propTypes = {\n  items: _propTypes[\"default\"].array,\n  fuseOptions: _propTypes[\"default\"].object,\n  useCaching: _propTypes[\"default\"].bool,\n  inputDebounce: _propTypes[\"default\"].number,\n  onSearch: _propTypes[\"default\"].func,\n  onSelect: _propTypes[\"default\"].func,\n  onFocus: _propTypes[\"default\"].func,\n  showIcon: _propTypes[\"default\"].bool,\n  maxResults: _propTypes[\"default\"].number,\n  placeholder: _propTypes[\"default\"].string,\n  autoFocus: _propTypes[\"default\"].bool,\n  styling: _propTypes[\"default\"].object\n};","map":{"version":3,"sources":["../src/ReactSearchAutocomplete.js"],"names":["items","fuseOptions","useCaching","inputDebounce","onSearch","onSelect","onFocus","showIcon","maxResults","placeholder","autoFocus","styling","props","theme","defaultTheme","options","defaultFuseOptions","searchString","setSearchString","React","results","setResults","sessionStorage","keyword","fuse","Fuse","newResults","JSON","debounceOnSearch","handleSetSearchString","event","ReactSearchAutocomplete","PropTypes","object"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport Fuse from \"fuse.js\";\r\nimport { defaultTheme, GlobalStyle, defaultFuseOptions } from \"./defaults/defaults\";\r\nimport Results from \"./Results/Results\";\r\nimport { StyledReactSearchAutocomplete } from \"./StyledReactSearchAutocomplete\";\r\nimport SearchInput from \"./SearchInput/SearchInput\";\r\nimport { ThemeProvider } from 'styled-components'\r\nimport { debounce, isCached } from \"./utils/utils\";\r\n\r\nexport default function ReactSearchAutocomplete(props) {\r\n\r\n  const {\r\n    items,\r\n    fuseOptions,\r\n    useCaching,\r\n    inputDebounce,\r\n    onSearch,\r\n    onSelect,\r\n    onFocus,\r\n    showIcon,\r\n    maxResults,\r\n    placeholder,\r\n    autoFocus,\r\n    styling,\r\n  } = props;\r\n\r\n  const theme = {...defaultTheme, ...styling};\r\n  const options = {...defaultFuseOptions, ...fuseOptions};\r\n\r\n  const [searchString, setSearchString] = React.useState(\"\");\r\n  const [results, setResults] = React.useState();\r\n\r\n  React.useEffect(() => {\r\n    if (useCaching) sessionStorage.clear();\r\n  }, [items]);\r\n\r\n  React.useEffect(() => {\r\n\r\n    const keyword = searchString.toLowerCase();\r\n\r\n    if (keyword.length > 0) {\r\n      const fuse = new Fuse(items, options);\r\n      const newResults = fuse.search(searchString);\r\n      if (useCaching) {\r\n        if (keyword in sessionStorage) { \r\n          setResults(JSON.parse(sessionStorage.getItem(keyword)));\r\n        } else {\r\n          sessionStorage.setItem(keyword, JSON.stringify(newResults));\r\n          setResults(newResults);\r\n        }\r\n      } else {\r\n        setResults(newResults);\r\n      }\r\n    } else {\r\n      setResults([]);\r\n    }\r\n  }, [searchString, items, useCaching])\r\n\r\n  // This is used to debounce the onSearch props function\r\n  const debounceOnSearch = React.useCallback(\r\n    inputDebounce > 0 ?\r\n      debounce((keyword, cached) => onSearch(keyword, cached), inputDebounce)\r\n    :\r\n      (keyword, cached) => onSearch(keyword, cached), []);\r\n\r\n  const handleSetSearchString = event => {\r\n    setSearchString(event.target.value);\r\n    const keyword = event.target.value.toLowerCase();\r\n    if (useCaching) {\r\n      onSearch && debounceOnSearch(event.target.value, isCached(keyword));\r\n    } else {\r\n      onSearch && debounceOnSearch(event.target.value, false);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <ThemeProvider theme={theme}>\r\n      <GlobalStyle />\r\n      <StyledReactSearchAutocomplete>\r\n        <div className=\"wrapper\">\r\n          <SearchInput\r\n            searchString={searchString}\r\n            setSearchString={handleSetSearchString}\r\n            autoFocus={autoFocus}\r\n            onBlur={() => setResults([])}\r\n            onFocus={onFocus}\r\n            placeholder={placeholder}\r\n            showIcon={showIcon}\r\n          />\r\n          <Results\r\n            results={results}\r\n            onClick={onSelect}\r\n            setSearchString={setSearchString}\r\n            showIcon={showIcon}\r\n            maxResults={maxResults}\r\n          />\r\n        </div>\r\n      </StyledReactSearchAutocomplete>\r\n    </ThemeProvider>\r\n  )\r\n}\r\n\r\nReactSearchAutocomplete.defaultProps = {\r\n  items: [],\r\n  fuseOptions: defaultFuseOptions,\r\n  useCaching: true,\r\n  inputDebounce: 200,\r\n  showIcon: true,\r\n  maxResults: 10,\r\n  placeholder: \"\",\r\n  autoFocus: false,\r\n  styling: {},\r\n}\r\n\r\nReactSearchAutocomplete.propTypes = {\r\n  items: PropTypes.array,\r\n  fuseOptions: PropTypes.object,\r\n  useCaching: PropTypes.bool,\r\n  inputDebounce: PropTypes.number,\r\n  onSearch: PropTypes.func,\r\n  onSelect: PropTypes.func,\r\n  onFocus: PropTypes.func,\r\n  showIcon: PropTypes.bool,\r\n  maxResults: PropTypes.number,\r\n  placeholder: PropTypes.string,\r\n  autoFocus: PropTypes.bool,\r\n  styling: PropTypes.object,\r\n}"]},"metadata":{},"sourceType":"script"}