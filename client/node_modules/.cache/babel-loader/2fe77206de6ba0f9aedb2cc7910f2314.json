{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Hanane\\\\Pneu service\\\\client\\\\src\\\\screens\\\\PneuAuto.js\";\nimport React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Nav, Tab, Row, Col, Form, TabContainer } from 'react-bootstrap';\nimport styled from 'styled-components';\nimport { motion } from \"framer-motion\";\nimport axios from 'axios'; //images\n\nimport redCar from '../assets/red-car.jpg';\nimport pneus from '../assets/pneus.png';\nimport commande from '../assets/commandes.png';\nimport payment from '../assets/payement.png';\nimport service from '../assets/service.png';\nimport logo_transparent from '../assets/logo-transparent.png';\nimport remise from '../assets/remise-01.png'; //icons\n\nimport { AiFillCaretRight } from 'react-icons/ai'; //component\n\nimport Product_Carousel from '../components/Carousel';\nimport Recommandation from '../components/Recommandation';\nimport Header from '../components/Header';\nimport Navbar from '../components/Navbar';\nconst Styles = styled.div`\n    height:100%;\n    display: grid;\n    grid-template-columns: 1fr repeat(12, minmax(auto, 4.2rem)) 1fr;\n    grid-template-rows:5.8rem 28.5rem 5rem auto;\n    gap : 0 2rem;\n\n    .navbar-item{\n        grid-column: 1 / span 14;\n        grid-row: 1 / 2;\n    }\n    .promo-item{\n        grid-column: 1 / span 14;\n        grid-row: 1 / 4;\n        display:flex;\n        flex-direction:row;\n        justify-content:center;\n        align-items:center;\n    }\n    .promo-left-side{\n         width: 40%;\n         height: 100%;\n         background:#343a40;\n    }\n    .promo-right-side{\n        width: 60%;\n        height: 100%;\n        background: -webkit-linear-gradient( rgba(0, 0, 0, 0.3) 100%,transparent 100%), url(${redCar});\n        background-size:cover;\n    }\n    .content-item{\n        grid-column: 2 / span 12;\n        grid-row: 3 / 5;\n        background:#fff;\n        z-index:10;\n        text-align:center;\n\n    }\n    .search-item{\n        height:auto;\n        width:100%;\n        background: linear-gradient(90.84deg, #EF1A23 0.61%, #FB3C29 99.42%);  \n        opacity: 0.8;\n        color:white;\n        padding-bottom:1%;\n    }\n    .search-first-row{\n        display:flex;\n        flex-direction:row;\n        padding:1%;\n        height:50%;\n        justify-content:center;\n        align-items:center;\n    }\n    .search-second-row{\n        display:flex;\n        flex-direction:row;\n        justify-content:flex-end;\n        align-items:flex-end;\n        height:50%;\n    }\n    .search-button{\n        width:12%;\n        font-size:1.5em;\n        font-weight:600;\n        background:#2F3945;\n        border-radius:5px;\n        border:none;\n        color:white;\n        margin: 1%;\n    }\n    .search-input{\n        margin:1% 1%;\n        width: 15%;\n    }\n`;\n\nfunction Home(props) {\n  //search styling\n  const [key, setKey] = useState(\"dimension\");\n  const ActiveStyle = {\n    textAlign: \"left\",\n    background: \"transparent\",\n    color: \"white\",\n    fontSize: '1.5em',\n    fontFamily: 'Teko, sans-serif '\n  };\n  const inActiveStyle = { ...ActiveStyle,\n    background: \"rgba(0, 0, 0, 0.4)\",\n    color: \"white\",\n    fontSize: '1.5em',\n    fontFamily: 'Teko, sans-serif '\n  }; //data management\n\n  const [pneuDimension, setPneuDimension] = useState([]);\n  const [pneuVehicule, setPneuVehicule] = useState([]);\n  const [formDataDimension, setFormDataDimension] = useState({\n    largeur: '--',\n    hauteur: '--',\n    diametre: '--',\n    charge: '--',\n    vitesse: 'Tous',\n    marque: 'Tous'\n  });\n  const [formDataVehicule, setFormDataVehicule] = useState({\n    marqueV: '--',\n    modele: '--',\n    motorisation: '--',\n    annee: '--',\n    taille: '-- --'\n  }); //les dimensions 'dimension'\n\n  const [largeurs, setLargeurs] = useState([]);\n  const [hauteurs, setHauteurs] = useState([]);\n  const [diametres, setDiametres] = useState([]);\n  const [charges, setCharges] = useState([]);\n  const [vitesses, setVitesse] = useState([]);\n  const [marques, setMarques] = useState([]); //les dimensions vehicule\n\n  const [marqueVs, setMarqueVs] = useState([]);\n  const [modeles, setModeles] = useState([]);\n  const [motorisations, setMotorisations] = useState([]);\n  const [annees, setAnnees] = useState([]);\n  const [tailles, setTailles] = useState([]); //\n\n  const {\n    largeur,\n    hauteur,\n    diametre,\n    charge,\n    vitesse,\n    marque\n  } = formDataDimension;\n  const {\n    marqueV,\n    modele,\n    motorisation,\n    annee,\n    taille\n  } = formDataVehicule; //handle change from inputs\n\n  const handleChangeDimension = text => e => {\n    setFormDataDimension({ ...formDataDimension,\n      [text]: e.target.value\n    });\n    console.log(formDataDimension);\n  };\n\n  const handleChangeVehicule = text => e => {\n    setFormDataVehicule({ ...formDataVehicule,\n      [text]: e.target.value\n    });\n  };\n\n  useEffect(() => {\n    let hauteurs = [];\n    let diametres = [];\n    let charges = [];\n    pneuDimension.map(pneuDim => {\n      if (pneuDim.largeur == largeur) {\n        hauteurs.push(pneuDim.hauteur);\n        diametres.push(pneuDim.diametre);\n        charges.push(pneuDim.charge);\n      }\n    });\n    setHauteurs(hauteurs.filter((q, idx) => hauteurs.indexOf(q) === idx));\n    setDiametres(diametres.filter((q, idx) => diametres.indexOf(q) === idx));\n    setCharges(charges.filter((q, idx) => charges.indexOf(q) === idx));\n  }, [largeur]);\n  useEffect(() => {\n    let diametres = [];\n    let charges = [];\n    pneuDimension.map(pneuDim => {\n      if (pneuDim.largeur == largeur && pneuDim.hauteur == hauteur) {\n        diametres.push(pneuDim.diametre);\n        charges.push(pneuDim.charge);\n      }\n    });\n    setDiametres(diametres.filter((q, idx) => diametres.indexOf(q) === idx));\n    setCharges(charges.filter((q, idx) => charges.indexOf(q) === idx));\n  }, [hauteur]);\n  useEffect(() => {\n    let charges = [];\n    pneuDimension.map(pneuDim => {\n      if (pneuDim.largeur == largeur && pneuDim.hauteur == hauteur && pneuDim.diametre == diametre) {\n        charges.push(pneuDim.charge);\n      }\n    });\n    console.log(charges);\n    setCharges(charges.filter((q, idx) => charges.indexOf(q) === idx));\n  }, [diametre]); //filtre recherche par vehicule\n\n  useEffect(() => {\n    let modeles = [];\n    let motorisations = [];\n    let annee = [];\n    let tailles = [];\n    pneuVehicule.map(pneuVeh => {\n      if (pneuVeh.brand == marqueV) {\n        modeles.push(pneuVeh.model);\n        motorisations.push(pneuVeh.engine);\n        annee.push(pneuVeh.ad);\n        tailles.push(pneuVeh.dimension_complete);\n      }\n    });\n    setModeles(modeles.filter((q, idx) => modeles.indexOf(q) === idx));\n    setMotorisations(motorisations.filter((q, idx) => motorisations.indexOf(q) === idx));\n    setAnnees(annee.filter((q, idx) => annee.indexOf(q) === idx));\n    setTailles(tailles.filter((q, idx) => tailles.indexOf(q) === idx));\n  }, [marqueV]);\n  useEffect(() => {\n    let motorisations = [];\n    let annee = [];\n    let tailles = [];\n    pneuVehicule.map(pneuVeh => {\n      if (pneuVeh.brand == marqueV && pneuVeh.model == modele) {\n        motorisations.push(pneuVeh.engine);\n        annee.push(pneuVeh.ad);\n        tailles.push(pneuVeh.dimension_complete);\n      }\n    });\n    setMotorisations(motorisations.filter((q, idx) => motorisations.indexOf(q) === idx));\n    setAnnees(annee.filter((q, idx) => annee.indexOf(q) === idx));\n    setTailles(tailles.filter((q, idx) => tailles.indexOf(q) === idx));\n  }, [modele]);\n  useEffect(() => {\n    let annee = [];\n    let tailles = [];\n    pneuVehicule.map(pneuVeh => {\n      if (pneuVeh.brand == marqueV && pneuVeh.model == modele && pneuVeh.engine == motorisation) {\n        annee.push(pneuVeh.ad);\n        tailles.push(pneuVeh.dimension_complete);\n      }\n    });\n    setAnnees(annee.filter((q, idx) => annee.indexOf(q) === idx));\n    setTailles(tailles.filter((q, idx) => tailles.indexOf(q) === idx));\n  }, [motorisation]);\n  useEffect(() => {\n    let tailles = [];\n    pneuVehicule.map(pneuVeh => {\n      if (pneuVeh.brand == marqueV && pneuVeh.model == modele && pneuVeh.engine == motorisation && pneuVeh.ad == annee) {\n        tailles.push(pneuVeh.dimension_complete);\n      }\n    });\n    setTailles(tailles.filter((q, idx) => tailles.indexOf(q) === idx));\n  }, [annee]); //recherche par dimension\n\n  useEffect(() => {\n    axios.get(`${process.env.REACT_APP_API_URL}/search/dimension`).then(res => {\n      setPneuDimension(res.data);\n      const pneusDim = res.data;\n      let lars = [];\n      let hauts = [];\n      let diams = [];\n      let chars = [];\n      let vites = [];\n      let mars = [];\n\n      const unique = (value, index, self) => {\n        return self.indexOf(value) === index;\n      };\n\n      pneusDim.map(pneudim => {\n        lars.push(parseFloat(pneudim.largeur));\n        hauts.push(pneudim.hauteur);\n        diams.push(parseFloat(pneudim.diametre));\n        chars.push(parseInt(pneudim.charge));\n        vites.push(pneudim.vitesse);\n        mars.push(pneudim.marque);\n      });\n      const uniquelargeur = lars.filter(unique);\n      const uniquehauteur = hauts.filter(unique);\n      const uniquediametre = diams.filter(unique);\n      const uniquecharge = chars.filter(unique);\n      const uniquevitesse = vites.filter(unique);\n      const uniquemarque = mars.filter(unique);\n      uniquelargeur.sort(function (a, b) {\n        return a - b;\n      });\n      uniquehauteur.sort();\n      uniquediametre.sort(function (a, b) {\n        return a - b;\n      });\n      uniquecharge.sort(function (a, b) {\n        return a - b;\n      });\n      uniquevitesse.sort();\n      uniquemarque.sort();\n      setLargeurs(uniquelargeur);\n      setHauteurs(uniquehauteur);\n      setDiametres(uniquediametre);\n      setCharges(uniquecharge);\n      setVitesse(uniquevitesse);\n      setMarques(uniquemarque);\n    }).catch(err => {\n      console.log(err);\n    });\n  }, []); //recherche par vehicule\n\n  useEffect(() => {\n    axios.get(`${process.env.REACT_APP_API_URL}/search/vehicule`).then(res => {\n      setPneuVehicule(res.data);\n      const pneuVehs = res.data;\n      let marques = [];\n      let modeles = [];\n      let motorisations = [];\n      let annees = [];\n      let tailles = [];\n\n      const unique = (value, index, self) => {\n        return self.indexOf(value) === index;\n      };\n\n      pneuVehs.map(pneuVeh => {\n        marques.push(pneuVeh.brand);\n        modeles.push(pneuVeh.model);\n        motorisations.push(pneuVeh.engine);\n        annees.push(pneuVeh.ad);\n        tailles.push(pneuVeh.dimension_complete);\n      });\n      const uniquemarque = marques.filter(unique);\n      const uniquemodele = modeles.filter(unique);\n      const uniquemotorisation = motorisations.filter(unique);\n      const uniqueannee = annees.filter(unique);\n      const uniquetaille = tailles.filter(unique);\n      uniquemarque.sort();\n      uniquemodele.sort();\n      uniquemotorisation.sort();\n      uniqueannee.sort();\n      uniquetaille.sort();\n      setMarqueVs(uniquemarque);\n      setModeles(uniquemodele);\n      setMotorisations(uniquemotorisation);\n      setAnnees(uniqueannee);\n      setTailles(uniquetaille);\n    }).catch(err => {\n      console.log(err);\n    });\n  }, []); //submit data to backend\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    axios.post(`${process.env.REACT_APP_API_URL}/search/pneus`, {\n      largeur,\n      hauteur,\n      diametre,\n      charge,\n      vitesse,\n      marque\n    }).then(res => {\n      console.log(largeur + ' ' + hauteur + ' ' + diametre + ' ' + charge + ' ' + vitesse + ' ' + marque);\n      console.log(res.data);\n    }).catch(err => {\n      console.log(err);\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 433,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Styles, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 434,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"navbar-item\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 435,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Navbar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 436,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"promo-item\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 438,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"promo-left-side\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 439,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"promo-right-side\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 440,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"content-item\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 442,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"search-item\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 443,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Tab.Container, {\n    id: \"controlled-tab-example\",\n    activeKey: key,\n    onSelect: key => setKey(key),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 444,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 445,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 446,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(Nav.Link, {\n    eventKey: \"dimension\",\n    style: key === \"dimension\" ? ActiveStyle : inActiveStyle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 447,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(AiFillCaretRight, {\n    style: {\n      marginRight: '1%'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 451,\n      columnNumber: 41\n    }\n  }), \"Recherche Par dimension\")), /*#__PURE__*/React.createElement(Col, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 455,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(Nav.Link, {\n    eventKey: \"vehicule\",\n    style: key === \"vehicule\" ? ActiveStyle : inActiveStyle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 456,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(AiFillCaretRight, {\n    style: {\n      marginRight: '1%'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 460,\n      columnNumber: 42\n    }\n  }), \"Recherche Par vehicule\"))), /*#__PURE__*/React.createElement(Tab.Content, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 465,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Tab.Pane, {\n    eventKey: \"dimension\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 466,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 467,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"search-first-row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 468,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(Form.Group, {\n    className: \"search-input\",\n    controlId: \"exampleForm.ControlSelect1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 469,\n      columnNumber: 45\n    }\n  }, /*#__PURE__*/React.createElement(Form.Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 470,\n      columnNumber: 49\n    }\n  }, \"Largeur\"), /*#__PURE__*/React.createElement(Form.Control, {\n    as: \"select\",\n    value: largeur,\n    onChange: handleChangeDimension('largeur'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 471,\n      columnNumber: 49\n    }\n  }, largeurs.map(largeur => /*#__PURE__*/React.createElement(\"option\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 477,\n      columnNumber: 57\n    }\n  }, largeur)))), /*#__PURE__*/React.createElement(Form.Group, {\n    className: \"search-input\",\n    controlId: \"exampleForm.ControlSelect1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 481,\n      columnNumber: 45\n    }\n  }, /*#__PURE__*/React.createElement(Form.Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 482,\n      columnNumber: 49\n    }\n  }, \"hauteur\"), /*#__PURE__*/React.createElement(Form.Control, {\n    as: \"select\",\n    value: hauteur,\n    onChange: handleChangeDimension('hauteur'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 483,\n      columnNumber: 49\n    }\n  }, hauteurs.map(hauteur => /*#__PURE__*/React.createElement(\"option\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 489,\n      columnNumber: 57\n    }\n  }, hauteur)))), /*#__PURE__*/React.createElement(Form.Group, {\n    className: \"search-input\",\n    controlId: \"exampleForm.ControlSelect1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 493,\n      columnNumber: 45\n    }\n  }, /*#__PURE__*/React.createElement(Form.Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 494,\n      columnNumber: 49\n    }\n  }, \"Diametre\"), /*#__PURE__*/React.createElement(Form.Control, {\n    as: \"select\",\n    value: diametre,\n    onChange: handleChangeDimension('diametre'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 495,\n      columnNumber: 49\n    }\n  }, diametres.map(diametre => /*#__PURE__*/React.createElement(\"option\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 500,\n      columnNumber: 57\n    }\n  }, diametre)))), /*#__PURE__*/React.createElement(Form.Group, {\n    className: \"search-input\",\n    controlId: \"exampleForm.ControlSelect1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 504,\n      columnNumber: 45\n    }\n  }, /*#__PURE__*/React.createElement(Form.Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 505,\n      columnNumber: 49\n    }\n  }, \"Charge\"), /*#__PURE__*/React.createElement(Form.Control, {\n    as: \"select\",\n    value: charge,\n    onChange: handleChangeDimension('charge'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 506,\n      columnNumber: 49\n    }\n  }, charges.map(charge => /*#__PURE__*/React.createElement(\"option\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 511,\n      columnNumber: 57\n    }\n  }, charge)))), /*#__PURE__*/React.createElement(Form.Group, {\n    className: \"search-input\",\n    controlId: \"exampleForm.ControlSelect1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 515,\n      columnNumber: 45\n    }\n  }, /*#__PURE__*/React.createElement(Form.Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 516,\n      columnNumber: 49\n    }\n  }, \"Vitesse\"), /*#__PURE__*/React.createElement(Form.Control, {\n    as: \"select\",\n    value: vitesse,\n    onChange: handleChangeDimension('vitesse'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 517,\n      columnNumber: 49\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 521,\n      columnNumber: 57\n    }\n  }, \"Tous\"), vitesses.map(vitesse => /*#__PURE__*/React.createElement(\"option\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 523,\n      columnNumber: 57\n    }\n  }, vitesse)))), /*#__PURE__*/React.createElement(Form.Group, {\n    className: \"search-input\",\n    controlId: \"exampleForm.ControlSelect1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 527,\n      columnNumber: 45\n    }\n  }, /*#__PURE__*/React.createElement(Form.Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 528,\n      columnNumber: 49\n    }\n  }, \"Marque\"), /*#__PURE__*/React.createElement(Form.Control, {\n    as: \"select\",\n    value: marque,\n    onChange: handleChangeDimension('marque'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 529,\n      columnNumber: 49\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 533,\n      columnNumber: 57\n    }\n  }, \"Tous\"), marques.map(marque => /*#__PURE__*/React.createElement(\"option\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 535,\n      columnNumber: 57\n    }\n  }, marque))))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"search-second-row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 540,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    className: \"search-button\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 541,\n      columnNumber: 45\n    }\n  }, \"Rechercher\")))), /*#__PURE__*/React.createElement(Tab.Pane, {\n    eventKey: \"vehicule\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 545,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 546,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"search-first-row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 547,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(Form.Group, {\n    className: \"search-input\",\n    controlId: \"exampleForm.ControlSelect1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 548,\n      columnNumber: 45\n    }\n  }, /*#__PURE__*/React.createElement(Form.Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 549,\n      columnNumber: 49\n    }\n  }, \"Marque\"), /*#__PURE__*/React.createElement(Form.Control, {\n    as: \"select\",\n    value: marqueV,\n    onChange: handleChangeVehicule('marqueV'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 550,\n      columnNumber: 49\n    }\n  }, marqueVs.map(marque => /*#__PURE__*/React.createElement(\"option\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 555,\n      columnNumber: 53\n    }\n  }, marque)))), /*#__PURE__*/React.createElement(Form.Group, {\n    className: \"search-input\",\n    controlId: \"exampleForm.ControlSelect1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 559,\n      columnNumber: 45\n    }\n  }, /*#__PURE__*/React.createElement(Form.Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 560,\n      columnNumber: 49\n    }\n  }, \"Modele\"), /*#__PURE__*/React.createElement(Form.Control, {\n    as: \"select\",\n    value: modele,\n    onChange: handleChangeVehicule('modele'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 561,\n      columnNumber: 49\n    }\n  }, modeles.map(modele => /*#__PURE__*/React.createElement(\"option\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 566,\n      columnNumber: 53\n    }\n  }, modele)))), /*#__PURE__*/React.createElement(Form.Group, {\n    className: \"search-input\",\n    controlId: \"exampleForm.ControlSelect1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 570,\n      columnNumber: 45\n    }\n  }, /*#__PURE__*/React.createElement(Form.Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 571,\n      columnNumber: 49\n    }\n  }, \"Motorisation\"), /*#__PURE__*/React.createElement(Form.Control, {\n    as: \"select\",\n    value: motorisation,\n    onChange: handleChangeVehicule('motorisation'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 572,\n      columnNumber: 49\n    }\n  }, motorisations.map(motorisation => /*#__PURE__*/React.createElement(\"option\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 577,\n      columnNumber: 53\n    }\n  }, motorisation)))), /*#__PURE__*/React.createElement(Form.Group, {\n    className: \"search-input\",\n    controlId: \"exampleForm.ControlSelect1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 581,\n      columnNumber: 45\n    }\n  }, /*#__PURE__*/React.createElement(Form.Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 582,\n      columnNumber: 49\n    }\n  }, \"Annee\"), /*#__PURE__*/React.createElement(Form.Control, {\n    as: \"select\",\n    value: annee,\n    onChange: handleChangeVehicule('annee'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 583,\n      columnNumber: 49\n    }\n  }, annees.map(annee => /*#__PURE__*/React.createElement(\"option\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 588,\n      columnNumber: 53\n    }\n  }, annee)))), /*#__PURE__*/React.createElement(Form.Group, {\n    className: \"search-input\",\n    controlId: \"exampleForm.ControlSelect1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 592,\n      columnNumber: 45\n    }\n  }, /*#__PURE__*/React.createElement(Form.Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 593,\n      columnNumber: 49\n    }\n  }, \"Taille\"), /*#__PURE__*/React.createElement(Form.Control, {\n    as: \"select\",\n    value: taille,\n    onChange: handleChangeVehicule('taille'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 594,\n      columnNumber: 49\n    }\n  }, tailles.map(taille => /*#__PURE__*/React.createElement(\"option\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 599,\n      columnNumber: 53\n    }\n  }, taille))))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"search-second-row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 604,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    className: \"search-button\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 605,\n      columnNumber: 41\n    }\n  }, \"Rechercher\"))))))), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 612,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 613,\n      columnNumber: 17\n    }\n  }, \"Le Lorem Ipsum est simplement du faux texte employ\\xE9 dans la composition et la mise en page avant impression. Le Lorem Ipsum est le faux texte standard de l'imprimerie depuis les ann\\xE9es 1500, quand un imprimeur anonyme assembla ensemble des morceaux de texte pour r\\xE9aliser un livre sp\\xE9cimen de polices de texte.\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 614,\n      columnNumber: 17\n    }\n  }, \"Le Lorem Ipsum est simplement du faux texte employ\\xE9 dans la composition et la mise en page avant impression. Le Lorem Ipsum est le faux texte standard de l'imprimerie depuis les ann\\xE9es 1500, quand un imprimeur anonyme assembla ensemble des morceaux de texte pour r\\xE9aliser un livre sp\\xE9cimen de polices de texte.\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 615,\n      columnNumber: 17\n    }\n  }, \"Le Lorem Ipsum est simplement du faux texte employ\\xE9 dans la composition et la mise en page avant impression. Le Lorem Ipsum est le faux texte standard de l'imprimerie depuis les ann\\xE9es 1500, quand un imprimeur anonyme assembla ensemble des morceaux de texte pour r\\xE9aliser un livre sp\\xE9cimen de polices de texte.\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 617,\n      columnNumber: 21\n    }\n  }, \"Le Lorem Ipsum est simplement du faux texte employ\\xE9 dans la composition et la mise en page avant impression. Le Lorem Ipsum est le faux texte standard de l'imprimerie depuis les ann\\xE9es 1500, quand un imprimeur anonyme assembla ensemble des morceaux de texte pour r\\xE9aliser un livre sp\\xE9cimen de polices de texte.\")))));\n}\n\nexport default Home;\n/*\r\nconst Styles = styled.div`\r\ndisplay: grid;\r\ngrid-template: repeat(16, [row] 1fr) / repeat(14, [col] 1fr);\r\nmargin-bottom:5%;\r\n\r\n.item-1 {\r\n    grid-column: col 1 / span 14;\r\n    grid-row: row 1 / span 2 ;\r\n    background: transparent;\r\n    z-index:1;\r\n}\r\n.item-3 {\r\n  grid-column: col 1 / span 5;\r\n  grid-row: row 1 / span 11 ;\r\n  background: #2F3945;\r\n  opacity: 0.8;\r\n  display:flex;\r\n  flex-direction:row;\r\n  justify-content:flex-end;\r\n  align-items: center;\r\n}\r\n\r\n.item-4 {\r\n  grid-column: col 6 / span 11;\r\n  grid-row: row 1 / span 11 ;\r\n  background: -webkit-linear-gradient( rgba(0, 0, 0, 0.3) 100%,transparent 100%), url(${redCar});\r\n  background-size:cover;\r\n  display:flex;\r\n  flex-direction:row;\r\n  justify-content:flex-start;\r\n  align-items:center;\r\n}\r\n\r\n.item-5 {\r\n  grid-column: col 2 / span 12;\r\n  grid-row: row 9 / span 4;\r\n  background: linear-gradient(90.84deg, #EF1A23 0.61%, #FB3C29 99.42%);  \r\n  opacity: 0.8;\r\n  color:white;\r\n  z-index: 1;\r\n}\r\n.item-6 {\r\n  grid-column: col 1 / span 14;\r\n  grid-row: row 12 / span 4 ;\r\n  background: linear-gradient(360deg, #FFFFFF 0%, rgba(255, 255, 255, 0.08) 57.24%, rgba(47, 57, 69, 0.54) 104.71%);\r\n}\r\n.item-7{\r\n  grid-column: col 2 / span 12;\r\n  grid-row: row 14 / span 4;\r\n  background: transparent;\r\n}\r\n.item-8{\r\n  grid-column: col 2 / span 12;\r\n  grid-row: row 3 / span 5;\r\n  background: url(${remise}) no-repeat;\r\n  z-index:1;\r\n}\r\n.search-first-row{\r\n    display:flex;\r\n    flex-direction:row;\r\n    padding:1%;\r\n    height:50%;\r\n    justify-content:center;\r\n    align-items:center;\r\n}\r\n.search-second-row{\r\n    display:flex;\r\n    flex-direction:row;\r\n    justify-content:flex-end;\r\n    align-items:flex-end;\r\n    height:50%;\r\n}\r\n.search-button{\r\n    font-size:1.5em;\r\n    font-weight:600;\r\n    background:#2F3945;\r\n    border-radius:5px;\r\n    border:none;\r\n    color:white;\r\n    margin: 0 3% 0 0;\r\n}\r\n.search-input{\r\n    margin:1% 1%;\r\n    width: 12%;\r\n}\r\n\r\n.coordonnee{\r\n    display:flex;\r\n    flex-direction:row;\r\n    align-items:center;\r\n    justify-content:center;\r\n    width:100%;\r\n    height:100%;\r\n    padding: 2% 0;\r\n}\r\n.card-coordonnee{\r\n    display:flex;\r\n    flex-direction:column;\r\n    align-items:center;\r\n    justify-content:center;\r\n    width:35%;\r\n    height:100%;\r\n    border-radius:10px;\r\n}\r\n.card-col-1{\r\n    display:flex;\r\n    flex-direction:column;\r\n    align-items:center;\r\n    justify-content:center;\r\n    width:100%;\r\n    height:100%;\r\n    background:transparent;\r\n    border-radius:50%\r\n}\r\n.card-col-2{\r\n    display:flex;\r\n    flex-direction:column;\r\n    align-items:center;\r\n    justify-content:center;\r\n    width:100%;\r\n    height:100%;\r\n}\r\n.card-col-3{\r\n    display:flex;\r\n    flex-direction:column;\r\n    align-items:flex-start;\r\n    justify-content:center;\r\n    width:5%;\r\n    height:100%;\r\n    padding-left:5%;\r\n}\r\n\r\n.marques{\r\n    padding:0 7%;\r\n    margin: 5% 0;\r\n}\r\n.titre-marques{\r\n    font-size:2em;\r\n    font-weight:600;\r\n    color:#555;\r\n    font-family: 'Teko', sans-serif;\r\n}\r\n\r\n`;\r\n\r\nfunction Home(props) {\r\n    //search styling\r\n    const [key, setKey] = useState(\"dimension\");\r\n    const ActiveStyle = {\r\n        textAlign: \"left\",\r\n        background: \"transparent\",\r\n        color: \"white\",\r\n        fontSize:'1.5em',\r\n        fontFamily:'Teko, sans-serif ' \r\n    };\r\n    const inActiveStyle = {\r\n        ...ActiveStyle,\r\n        background: \"rgba(0, 0, 0, 0.4)\",\r\n        color: \"white\",\r\n        fontSize:'1.5em',\r\n        fontFamily:'Teko, sans-serif ' \r\n\r\n    };\r\n\r\n    //data management\r\n    const [pneuDimension, setPneuDimension] = useState([])\r\n    const [pneuVehicule, setPneuVehicule] = useState([])\r\n    const [formDataDimension, setFormDataDimension] = useState({\r\n        largeur :'--', \r\n        hauteur :'--',\r\n        diametre : '--',\r\n        charge :'--', \r\n        vitesse:'Tous',\r\n        marque :'Tous'\r\n    })\r\n    const [formDataVehicule, setFormDataVehicule] = useState({\r\n        marqueV :'--', \r\n        modele :'--',\r\n        motorisation : '--',\r\n        annee :'--', \r\n        taille:'-- --'\r\n    })\r\n\r\n    //les dimensions 'dimension'\r\n    const [largeurs, setLargeurs]= useState([]);\r\n    const [hauteurs, setHauteurs]= useState([]);\r\n    const [diametres, setDiametres]= useState([]);\r\n    const [charges, setCharges]= useState([]);\r\n    const [vitesses, setVitesse] = useState([]);\r\n    const [marques, setMarques]= useState([]);\r\n    \r\n    //les dimensions vehicule\r\n    const [marqueVs, setMarqueVs] = useState([]);\r\n    const [modeles, setModeles] = useState([]);\r\n    const [motorisations, setMotorisations] = useState([]);\r\n    const [annees, setAnnees] = useState([]);\r\n    const [tailles, setTailles] = useState([]);\r\n\r\n    //\r\n    const {largeur, hauteur, diametre, charge, vitesse, marque} = formDataDimension\r\n    const {marqueV, modele, motorisation, annee, taille} = formDataVehicule\r\n\r\n    //handle change from inputs\r\n    const handleChangeDimension = text => e => {\r\n        setFormDataDimension({...formDataDimension, [text]: e.target.value})\r\n        console.log(formDataDimension)\r\n    }\r\n\r\n    const handleChangeVehicule = text => e => {\r\n        setFormDataVehicule({...formDataVehicule, [text]: e.target.value})\r\n    }\r\n\r\n    useEffect(() => {\r\n        let hauteurs = []\r\n        let diametres = []\r\n        let charges = []\r\n            pneuDimension.map((pneuDim)=>{\r\n                if(pneuDim.largeur==largeur){\r\n                    hauteurs.push(pneuDim.hauteur);\r\n                    diametres.push(pneuDim.diametre);\r\n                    charges.push(pneuDim.charge);\r\n                }\r\n            })\r\n            setHauteurs(\r\n                hauteurs.filter((q, idx) => \r\n                hauteurs.indexOf(q) === idx)\r\n            )\r\n            setDiametres(\r\n                diametres.filter((q, idx) => \r\n                diametres.indexOf(q) === idx)\r\n            )\r\n            setCharges(\r\n                charges.filter((q, idx) => \r\n                charges.indexOf(q) === idx)\r\n            )\r\n    },[largeur])\r\n    useEffect(() => {\r\n        let diametres = []\r\n        let charges = []\r\n            pneuDimension.map((pneuDim)=>{\r\n                if(pneuDim.largeur==largeur && pneuDim.hauteur==hauteur){\r\n                    diametres.push(pneuDim.diametre);\r\n                    charges.push(pneuDim.charge);\r\n                }\r\n            })\r\n            setDiametres(\r\n                diametres.filter((q, idx) => \r\n                diametres.indexOf(q) === idx)\r\n            )\r\n            setCharges(\r\n                charges.filter((q, idx) => \r\n                charges.indexOf(q) === idx)\r\n            )\r\n    },[hauteur])\r\n    useEffect(() => {\r\n        let charges = []\r\n            pneuDimension.map((pneuDim)=>{\r\n                if(pneuDim.largeur==largeur && pneuDim.hauteur==hauteur && pneuDim.diametre==diametre){\r\n                    charges.push(pneuDim.charge);\r\n                }\r\n            })\r\n            console.log(charges)\r\n            setCharges(\r\n                charges.filter((q, idx) => \r\n                charges.indexOf(q) === idx)\r\n            )\r\n    },[diametre])\r\n\r\n//filtre recherche par vehicule\r\n    useEffect(() => {\r\n        let modeles = []\r\n        let motorisations = []\r\n        let annee = []\r\n        let tailles = []\r\n            pneuVehicule.map((pneuVeh)=>{\r\n                if(pneuVeh.brand==marqueV){\r\n                    modeles.push(pneuVeh.model);\r\n                    motorisations.push(pneuVeh.engine);\r\n                    annee.push(pneuVeh.ad);\r\n                    tailles.push(pneuVeh.dimension_complete);\r\n                }\r\n            })\r\n            setModeles(\r\n                modeles.filter((q, idx) => \r\n                modeles.indexOf(q) === idx)\r\n            )\r\n            setMotorisations(\r\n                motorisations.filter((q, idx) => \r\n                motorisations.indexOf(q) === idx)\r\n            )\r\n            setAnnees(\r\n                annee.filter((q, idx) => \r\n                annee.indexOf(q) === idx)\r\n            )\r\n            setTailles(\r\n                tailles.filter((q, idx) => \r\n                tailles.indexOf(q) === idx)\r\n            )\r\n    },[marqueV])\r\n\r\n    useEffect(() => {\r\n        let motorisations = []\r\n        let annee = []\r\n        let tailles = []\r\n            pneuVehicule.map((pneuVeh)=>{\r\n                if(pneuVeh.brand==marqueV && pneuVeh.model==modele){\r\n                    motorisations.push(pneuVeh.engine);\r\n                    annee.push(pneuVeh.ad);\r\n                    tailles.push(pneuVeh.dimension_complete);\r\n                }\r\n            })\r\n            setMotorisations(\r\n                motorisations.filter((q, idx) => \r\n                motorisations.indexOf(q) === idx)\r\n            )\r\n            setAnnees(\r\n                annee.filter((q, idx) => \r\n                annee.indexOf(q) === idx)\r\n            )\r\n            setTailles(\r\n                tailles.filter((q, idx) => \r\n                tailles.indexOf(q) === idx)\r\n            )\r\n    },[modele])\r\n\r\n    useEffect(() => {\r\n        let annee = []\r\n        let tailles = []\r\n            pneuVehicule.map((pneuVeh)=>{\r\n                if(pneuVeh.brand==marqueV && pneuVeh.model==modele && pneuVeh.engine==motorisation){\r\n                    annee.push(pneuVeh.ad);\r\n                    tailles.push(pneuVeh.dimension_complete);\r\n                }\r\n            })\r\n            setAnnees(\r\n                annee.filter((q, idx) => \r\n                annee.indexOf(q) === idx)\r\n            )\r\n            setTailles(\r\n                tailles.filter((q, idx) => \r\n                tailles.indexOf(q) === idx)\r\n            )\r\n    },[motorisation])\r\n\r\n    useEffect(() => {\r\n        let tailles = []\r\n            pneuVehicule.map((pneuVeh)=>{\r\n                if(pneuVeh.brand==marqueV && pneuVeh.model==modele && pneuVeh.engine==motorisation && pneuVeh.ad==annee){\r\n                    tailles.push(pneuVeh.dimension_complete);\r\n                }\r\n            })\r\n            setTailles(\r\n                tailles.filter((q, idx) => \r\n                tailles.indexOf(q) === idx)\r\n            )\r\n    },[annee])\r\n\r\n\r\n\r\n    //recherche par dimension\r\n    useEffect(() => {\r\n        axios.get(`${process.env.REACT_APP_API_URL}/search/dimension`)\r\n        .then(res => {\r\n            setPneuDimension(res.data)\r\n            const pneusDim = res.data;\r\n            let lars = []\r\n            let hauts = []\r\n            let diams = []\r\n            let chars = []\r\n            let vites = []\r\n            let mars = []\r\n            const unique = (value, index, self)=>{\r\n                return self.indexOf(value) === index\r\n            }\r\n            pneusDim.map((pneudim)=>{\r\n            lars.push(parseFloat(pneudim.largeur))\r\n            hauts.push(pneudim.hauteur)\r\n            diams.push(parseFloat(pneudim.diametre))\r\n            chars.push(parseInt(pneudim.charge))\r\n            vites.push(pneudim.vitesse)\r\n            mars.push(pneudim.marque)\r\n            })\r\n            const uniquelargeur = lars.filter(unique)\r\n            const uniquehauteur = hauts.filter(unique)\r\n            const uniquediametre = diams.filter(unique)\r\n            const uniquecharge = chars.filter(unique)\r\n            const uniquevitesse = vites.filter(unique)\r\n            const uniquemarque = mars.filter(unique)\r\n\r\n            uniquelargeur.sort(function(a, b) {\r\n                return a - b;\r\n            });\r\n            uniquehauteur.sort()\r\n            uniquediametre.sort(function(a, b) {\r\n                return a - b;\r\n            });\r\n            uniquecharge.sort(function(a, b) {\r\n                return a - b;\r\n            });\r\n            uniquevitesse.sort();\r\n            uniquemarque.sort();\r\n            setLargeurs(uniquelargeur)\r\n            setHauteurs(uniquehauteur)\r\n            setDiametres(uniquediametre)\r\n            setCharges(uniquecharge)\r\n            setVitesse(uniquevitesse)\r\n            setMarques(uniquemarque)     \r\n        })\r\n        .catch(err => {\r\n            console.log(err)\r\n        })\r\n    }, [])\r\n\r\n\r\n    //recherche par vehicule\r\n    useEffect(() => {\r\n        axios.get(`${process.env.REACT_APP_API_URL}/search/vehicule`)\r\n        .then(res => {\r\n            setPneuVehicule(res.data);\r\n            const pneuVehs = res.data;\r\n            let marques = []\r\n            let modeles = []\r\n            let motorisations = []\r\n            let annees = []\r\n            let tailles = []\r\n            const unique = (value, index, self)=>{\r\n                return self.indexOf(value) === index\r\n            }\r\n            pneuVehs.map((pneuVeh)=>{\r\n                marques.push(pneuVeh.brand)\r\n                modeles.push(pneuVeh.model)\r\n                motorisations.push(pneuVeh.engine)\r\n                annees.push(pneuVeh.ad)\r\n                tailles.push(pneuVeh.dimension_complete)\r\n            })\r\n            const uniquemarque = marques.filter(unique)\r\n            const uniquemodele = modeles.filter(unique)\r\n            const uniquemotorisation = motorisations.filter(unique)\r\n            const uniqueannee = annees.filter(unique)\r\n            const uniquetaille = tailles.filter(unique)\r\n\r\n            uniquemarque.sort();\r\n            uniquemodele.sort()\r\n            uniquemotorisation.sort();\r\n            uniqueannee.sort();\r\n            uniquetaille.sort();\r\n            \r\n            setMarqueVs(uniquemarque);\r\n            setModeles(uniquemodele);\r\n            setMotorisations(uniquemotorisation);\r\n            setAnnees(uniqueannee);\r\n            setTailles(uniquetaille)\r\n        })\r\n        .catch(err => {\r\n            console.log(err)\r\n        })\r\n    }, []);\r\n    //submit data to backend\r\n  const handleSubmit = e => {\r\n    e.preventDefault()\r\n    axios.post(`${process.env.REACT_APP_API_URL}/search/pneus`, {\r\n        largeur, hauteur, diametre, charge, vitesse, marque\r\n         }).then(res => {\r\n           console.log(largeur+' '+hauteur+' '+diametre+' '+charge+' '+vitesse+' '+marque)\r\n           console.log(res.data)\r\n           \r\n         }).catch(err => {\r\n          console.log(err)\r\n         })\r\n    }\r\n  \r\n    return(\r\n        <React.Fragment>\r\n            <Styles>\r\n                <div className='item-1'><Navbar/></div>\r\n                <div className='item-8'></div>\r\n                <div className='item-3'>\r\n                        <img\r\n                            src={logo_transparent}\r\n                            width='60'\r\n                            height='150'\r\n                            style={{margin:'0 0 50% 0', padding:'0'}}\r\n                        />\r\n                </div>\r\n                <div className='item-4'>\r\n                    <img\r\n                        src={service}\r\n                        width='20'\r\n                        height='150'\r\n                        style={{margin:'0 0 28% 0', padding:'0'}}\r\n                    />\r\n                </div>\r\n                <div className='item-5'>\r\n                <Tab.Container id=\"controlled-tab-example\" activeKey={key} onSelect={key => setKey(key)}>\r\n                            <Row>\r\n                                <Col>\r\n                                    <Nav.Link  \r\n                                    eventKey=\"dimension\" \r\n                                    style={key === \"dimension\" ? ActiveStyle : inActiveStyle}\r\n                                    >\r\n                                        <AiFillCaretRight style={{marginRight:'1%'}}/>\r\n                                        Recherche Par dimension\r\n                                    </Nav.Link>\r\n                                </Col>\r\n                                <Col>\r\n                                    <Nav.Link  \r\n                                    eventKey=\"vehicule\" \r\n                                    style={key === \"vehicule\" ? ActiveStyle : inActiveStyle}\r\n                                    >\r\n                                         <AiFillCaretRight style={{marginRight:'1%'}}/>\r\n                                        Recherche Par vehicule\r\n                                    </Nav.Link>\r\n                                </Col>\r\n                            </Row>\r\n                            <Tab.Content>\r\n                                <Tab.Pane eventKey=\"dimension\" >\r\n                                <form onSubmit={handleSubmit}>\r\n                                    <div className='search-first-row'>\r\n                                        <Form.Group className='search-input' controlId=\"exampleForm.ControlSelect1\">\r\n                                            <Form.Label>Largeur</Form.Label>\r\n                                            <Form.Control \r\n                                                as=\"select\"\r\n                                                value={largeur}\r\n                                                onChange={handleChangeDimension('largeur')}\r\n                                            >\r\n                                                {largeurs.map((largeur)=>\r\n                                                    <option>{largeur}</option>\r\n                                                )} \r\n                                            </Form.Control>\r\n                                        </Form.Group>\r\n                                        <Form.Group className='search-input' controlId=\"exampleForm.ControlSelect1\">\r\n                                            <Form.Label>hauteur</Form.Label>\r\n                                            <Form.Control \r\n                                               as=\"select\"\r\n                                               value={hauteur}\r\n                                               onChange={handleChangeDimension('hauteur')}\r\n                                               >\r\n                                                 {hauteurs.map((hauteur)=>\r\n                                                    <option>{hauteur}</option>\r\n                                                )} \r\n                                            </Form.Control>\r\n                                        </Form.Group>\r\n                                        <Form.Group className='search-input' controlId=\"exampleForm.ControlSelect1\">\r\n                                            <Form.Label>Diametre</Form.Label>\r\n                                            <Form.Control as=\"select\"\r\n                                               value={diametre}\r\n                                               onChange={handleChangeDimension('diametre')}\r\n                                               >\r\n                                                 {diametres.map((diametre)=>\r\n                                                    <option>{diametre}</option>\r\n                                                )} \r\n                                            </Form.Control>\r\n                                        </Form.Group>\r\n                                        <Form.Group className='search-input' controlId=\"exampleForm.ControlSelect1\">\r\n                                            <Form.Label>Charge</Form.Label>\r\n                                            <Form.Control as=\"select\"\r\n                                               value={charge}\r\n                                               onChange={handleChangeDimension('charge')}\r\n                                               >\r\n                                                 {charges.map((charge)=>\r\n                                                    <option>{charge}</option>\r\n                                                )} \r\n                                            </Form.Control>\r\n                                        </Form.Group>\r\n                                        <Form.Group className='search-input' controlId=\"exampleForm.ControlSelect1\">\r\n                                            <Form.Label>Vitesse</Form.Label>\r\n                                            <Form.Control as=\"select\"\r\n                                               value={vitesse}\r\n                                               onChange={handleChangeDimension('vitesse')}\r\n                                               >\r\n                                                   <option>Tous</option>\r\n                                                 {vitesses.map((vitesse)=>\r\n                                                    <option>{vitesse}</option>\r\n                                                )} \r\n                                            </Form.Control>\r\n                                        </Form.Group>\r\n                                        <Form.Group className='search-input' controlId=\"exampleForm.ControlSelect1\">\r\n                                            <Form.Label>Marque</Form.Label>\r\n                                            <Form.Control as=\"select\"\r\n                                               value={marque}\r\n                                               onChange={handleChangeDimension('marque')}\r\n                                               >\r\n                                                    <option>Tous</option> \r\n                                                 {marques.map((marque)=>\r\n                                                    <option>{marque}</option>\r\n                                                )} \r\n                                            </Form.Control>\r\n                                        </Form.Group>\r\n                                    </div>\r\n                                    <div className='search-second-row'>\r\n                                       <button className='search-button'>Rechercher</button>\r\n                                    </div>\r\n                                    </form>\r\n                                </Tab.Pane>\r\n                                <Tab.Pane eventKey=\"vehicule\">\r\n                                <form>   \r\n                                <div className='search-first-row'>\r\n                                        <Form.Group className='search-input' controlId=\"exampleForm.ControlSelect1\">\r\n                                            <Form.Label>Marque</Form.Label>\r\n                                            <Form.Control as=\"select\"\r\n                                               value={marqueV}\r\n                                               onChange={handleChangeVehicule('marqueV')}\r\n                                               >\r\n                                                 {marqueVs.map((marque)=>\r\n                                                    <option>{marque}</option>\r\n                                                )} \r\n                                            </Form.Control>\r\n                                        </Form.Group>\r\n                                        <Form.Group className='search-input' controlId=\"exampleForm.ControlSelect1\">\r\n                                            <Form.Label>Modele</Form.Label>\r\n                                            <Form.Control as=\"select\"\r\n                                               value={modele}\r\n                                               onChange={handleChangeVehicule('modele')}\r\n                                               >\r\n                                                 {modeles.map((modele)=>\r\n                                                    <option>{modele}</option>\r\n                                                )} \r\n                                            </Form.Control>\r\n                                        </Form.Group>\r\n                                        <Form.Group className='search-input' controlId=\"exampleForm.ControlSelect1\">\r\n                                            <Form.Label>Motorisation</Form.Label>\r\n                                            <Form.Control as=\"select\"\r\n                                               value={motorisation}\r\n                                               onChange={handleChangeVehicule('motorisation')}\r\n                                               >\r\n                                                 {motorisations.map((motorisation)=>\r\n                                                    <option>{motorisation}</option>\r\n                                                )} \r\n                                            </Form.Control>\r\n                                        </Form.Group>\r\n                                        <Form.Group className='search-input' controlId=\"exampleForm.ControlSelect1\">\r\n                                            <Form.Label>Annee</Form.Label>\r\n                                            <Form.Control as=\"select\"\r\n                                               value={annee}\r\n                                               onChange={handleChangeVehicule('annee')}\r\n                                               >\r\n                                                 {annees.map((annee)=>\r\n                                                    <option>{annee}</option>\r\n                                                )} \r\n                                            </Form.Control>\r\n                                        </Form.Group>\r\n                                        <Form.Group className='search-input' controlId=\"exampleForm.ControlSelect1\">\r\n                                            <Form.Label>Taille</Form.Label>\r\n                                            <Form.Control as=\"select\"\r\n                                               value={taille}\r\n                                               onChange={handleChangeVehicule('taille')}\r\n                                               >\r\n                                                 {tailles.map((taille)=>\r\n                                                    <option>{taille}</option>\r\n                                                )} \r\n                                            </Form.Control>\r\n                                        </Form.Group>\r\n                                    </div>\r\n                                    <div className='search-second-row'>\r\n                                       <button type='submit' className='search-button'>Rechercher</button>\r\n                                    </div>\r\n                                    </form> \r\n                                </Tab.Pane>\r\n                            </Tab.Content>\r\n                        </Tab.Container> \r\n                    </div>\r\n                    <div className='item-6'></div>\r\n                    <div className='item-7'>7\r\n                      <div className='coordonnee'>\r\n                        <div className='card-coordonnee'>\r\n                            <div className='card-col-1'>\r\n                                <img\r\n                                    src={pneus}\r\n                                    width=\"98\"\r\n                                    height=\"78\"\r\n                                    className=\"logo\"\r\n                                    alt=\"Logo Pneu service\"\r\n                                />\r\n                            </div>\r\n                            <div className='card-col-2'>\r\n                                <p style={{fontSize:'1.3em', fontWeight:'800', color:'#888', margin:'0', fontFamily: 'MuseoModerno, cursive'}}>1.Choisissez vos pneus </p>\r\n                                <p style={{fontSize:'1em', fontWeight:'600', color:'#999', fontFamily: 'MuseoModerno, cursive'}}>Parmi un large choix </p>\r\n                            </div>\r\n                        </div>\r\n                        <div className='card-coordonnee'>\r\n                            <div className='card-col-1'>\r\n                                <img\r\n                                    src={commande}\r\n                                    width=\"88\"\r\n                                    height=\"84\"\r\n                                    className=\"logo\"\r\n                                    alt=\"Logo Pneu service\"\r\n                                />\r\n                            </div>\r\n                            <div className='card-col-2'>\r\n                            <p style={{fontSize:'1.3em', fontWeight:'800', color:'#888', margin:'0', fontFamily: 'MuseoModerno, cursive'}}>2.Faites votre commande.</p>\r\n                                <p style={{fontSize:'1em', fontWeight:'600', color:'#999',fontFamily: 'MuseoModerno, cursive'}}>En precisant le nombre de pneu</p>\r\n                            </div>\r\n                        </div>\r\n                        <div className='card-coordonnee'>\r\n                            <div className='card-col-1'>\r\n                                <img\r\n                                    src={payment}\r\n                                    width=\"83\"\r\n                                    height=\"80\"\r\n                                    className=\"logo\"\r\n                                    alt=\"Logo Pneu service\"\r\n                                />\r\n                            </div>\r\n                            <div className='card-col-2'>\r\n                            <p style={{fontSize:'1.3em', fontWeight:'800', color:'#888', margin:'0', fontFamily: 'MuseoModerno, cursive'}}>3.Payez à la livraison </p>\r\n                                <p style={{fontSize:'1em', fontWeight:'600', color:'#999', fontFamily: 'MuseoModerno, cursive'}}>ou au centre de montage agrée.</p>\r\n                            </div>\r\n                        </div>\r\n                     </div>\r\n                     <p>The value for min has to be smaller than the value for max. Fr units can’t be used for the min value, but they can absolutely be used for t</p>\r\n                     <p>The value for min has to be smaller than the value for max. Fr units can’t be used for the min value, but they can absolutely be used for t</p>\r\n                     <p>The value for min has to be smaller than the value for max. Fr units can’t be used for the min value, but they can absolutely be used for t</p>\r\n                     <p>The value for min has to be smaller than the value for max. Fr units can’t be used for the min value, but they can absolutely be used for t</p>\r\n\r\n                  </div>   \r\n            </Styles>\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default Home;\r\n\r\n/**\r\n *  \r\n<Recommandation/>\r\n                  <div className='marques'>\r\n                      <p className='titre-marques'>Nos marques de Pneu Auto</p>\r\n                      <Product_Carousel/>\r\n                  </div>\r\n   \r\n \r\n*/","map":{"version":3,"sources":["C:/Users/Hanane/Pneu service/client/src/screens/PneuAuto.js"],"names":["React","useState","useEffect","Link","Nav","Tab","Row","Col","Form","TabContainer","styled","motion","axios","redCar","pneus","commande","payment","service","logo_transparent","remise","AiFillCaretRight","Product_Carousel","Recommandation","Header","Navbar","Styles","div","Home","props","key","setKey","ActiveStyle","textAlign","background","color","fontSize","fontFamily","inActiveStyle","pneuDimension","setPneuDimension","pneuVehicule","setPneuVehicule","formDataDimension","setFormDataDimension","largeur","hauteur","diametre","charge","vitesse","marque","formDataVehicule","setFormDataVehicule","marqueV","modele","motorisation","annee","taille","largeurs","setLargeurs","hauteurs","setHauteurs","diametres","setDiametres","charges","setCharges","vitesses","setVitesse","marques","setMarques","marqueVs","setMarqueVs","modeles","setModeles","motorisations","setMotorisations","annees","setAnnees","tailles","setTailles","handleChangeDimension","text","e","target","value","console","log","handleChangeVehicule","map","pneuDim","push","filter","q","idx","indexOf","pneuVeh","brand","model","engine","ad","dimension_complete","get","process","env","REACT_APP_API_URL","then","res","data","pneusDim","lars","hauts","diams","chars","vites","mars","unique","index","self","pneudim","parseFloat","parseInt","uniquelargeur","uniquehauteur","uniquediametre","uniquecharge","uniquevitesse","uniquemarque","sort","a","b","catch","err","pneuVehs","uniquemodele","uniquemotorisation","uniqueannee","uniquetaille","handleSubmit","preventDefault","post","marginRight"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport {Nav, Tab, Row, Col, Form, TabContainer} from 'react-bootstrap'\r\nimport styled from 'styled-components';\r\nimport { motion} from \"framer-motion\";\r\nimport axios from 'axios'\r\n\r\n//images\r\nimport redCar from '../assets/red-car.jpg'\r\nimport pneus from '../assets/pneus.png'\r\nimport commande from '../assets/commandes.png'\r\nimport payment from '../assets/payement.png'\r\nimport service from '../assets/service.png'\r\nimport logo_transparent from '../assets/logo-transparent.png'\r\nimport remise from '../assets/remise-01.png'\r\n\r\n\r\n\r\n//icons\r\nimport {AiFillCaretRight} from 'react-icons/ai'\r\n//component\r\nimport Product_Carousel from '../components/Carousel'\r\nimport Recommandation from '../components/Recommandation'\r\nimport Header from '../components/Header'\r\nimport Navbar from '../components/Navbar'\r\n\r\n\r\nconst Styles = styled.div`\r\n    height:100%;\r\n    display: grid;\r\n    grid-template-columns: 1fr repeat(12, minmax(auto, 4.2rem)) 1fr;\r\n    grid-template-rows:5.8rem 28.5rem 5rem auto;\r\n    gap : 0 2rem;\r\n\r\n    .navbar-item{\r\n        grid-column: 1 / span 14;\r\n        grid-row: 1 / 2;\r\n    }\r\n    .promo-item{\r\n        grid-column: 1 / span 14;\r\n        grid-row: 1 / 4;\r\n        display:flex;\r\n        flex-direction:row;\r\n        justify-content:center;\r\n        align-items:center;\r\n    }\r\n    .promo-left-side{\r\n         width: 40%;\r\n         height: 100%;\r\n         background:#343a40;\r\n    }\r\n    .promo-right-side{\r\n        width: 60%;\r\n        height: 100%;\r\n        background: -webkit-linear-gradient( rgba(0, 0, 0, 0.3) 100%,transparent 100%), url(${redCar});\r\n        background-size:cover;\r\n    }\r\n    .content-item{\r\n        grid-column: 2 / span 12;\r\n        grid-row: 3 / 5;\r\n        background:#fff;\r\n        z-index:10;\r\n        text-align:center;\r\n\r\n    }\r\n    .search-item{\r\n        height:auto;\r\n        width:100%;\r\n        background: linear-gradient(90.84deg, #EF1A23 0.61%, #FB3C29 99.42%);  \r\n        opacity: 0.8;\r\n        color:white;\r\n        padding-bottom:1%;\r\n    }\r\n    .search-first-row{\r\n        display:flex;\r\n        flex-direction:row;\r\n        padding:1%;\r\n        height:50%;\r\n        justify-content:center;\r\n        align-items:center;\r\n    }\r\n    .search-second-row{\r\n        display:flex;\r\n        flex-direction:row;\r\n        justify-content:flex-end;\r\n        align-items:flex-end;\r\n        height:50%;\r\n    }\r\n    .search-button{\r\n        width:12%;\r\n        font-size:1.5em;\r\n        font-weight:600;\r\n        background:#2F3945;\r\n        border-radius:5px;\r\n        border:none;\r\n        color:white;\r\n        margin: 1%;\r\n    }\r\n    .search-input{\r\n        margin:1% 1%;\r\n        width: 15%;\r\n    }\r\n`;\r\n\r\nfunction Home(props){\r\n\r\n    //search styling\r\n    const [key, setKey] = useState(\"dimension\");\r\n    const ActiveStyle = {\r\n        textAlign: \"left\",\r\n        background: \"transparent\",\r\n        color: \"white\",\r\n        fontSize:'1.5em',\r\n        fontFamily:'Teko, sans-serif ' \r\n    };\r\n    const inActiveStyle = {\r\n        ...ActiveStyle,\r\n        background: \"rgba(0, 0, 0, 0.4)\",\r\n        color: \"white\",\r\n        fontSize:'1.5em',\r\n        fontFamily:'Teko, sans-serif ' \r\n\r\n    };\r\n\r\n    //data management\r\n    const [pneuDimension, setPneuDimension] = useState([])\r\n    const [pneuVehicule, setPneuVehicule] = useState([])\r\n    const [formDataDimension, setFormDataDimension] = useState({\r\n        largeur :'--', \r\n        hauteur :'--',\r\n        diametre : '--',\r\n        charge :'--', \r\n        vitesse:'Tous',\r\n        marque :'Tous'\r\n    })\r\n    const [formDataVehicule, setFormDataVehicule] = useState({\r\n        marqueV :'--', \r\n        modele :'--',\r\n        motorisation : '--',\r\n        annee :'--', \r\n        taille:'-- --'\r\n    })\r\n\r\n    //les dimensions 'dimension'\r\n    const [largeurs, setLargeurs]= useState([]);\r\n    const [hauteurs, setHauteurs]= useState([]);\r\n    const [diametres, setDiametres]= useState([]);\r\n    const [charges, setCharges]= useState([]);\r\n    const [vitesses, setVitesse] = useState([]);\r\n    const [marques, setMarques]= useState([]);\r\n    \r\n    //les dimensions vehicule\r\n    const [marqueVs, setMarqueVs] = useState([]);\r\n    const [modeles, setModeles] = useState([]);\r\n    const [motorisations, setMotorisations] = useState([]);\r\n    const [annees, setAnnees] = useState([]);\r\n    const [tailles, setTailles] = useState([]);\r\n\r\n    //\r\n    const {largeur, hauteur, diametre, charge, vitesse, marque} = formDataDimension\r\n    const {marqueV, modele, motorisation, annee, taille} = formDataVehicule\r\n\r\n    //handle change from inputs\r\n    const handleChangeDimension = text => e => {\r\n        setFormDataDimension({...formDataDimension, [text]: e.target.value})\r\n        console.log(formDataDimension)\r\n    }\r\n\r\n    const handleChangeVehicule = text => e => {\r\n        setFormDataVehicule({...formDataVehicule, [text]: e.target.value})\r\n    }\r\n\r\n    useEffect(() => {\r\n        let hauteurs = []\r\n        let diametres = []\r\n        let charges = []\r\n            pneuDimension.map((pneuDim)=>{\r\n                if(pneuDim.largeur==largeur){\r\n                    hauteurs.push(pneuDim.hauteur);\r\n                    diametres.push(pneuDim.diametre);\r\n                    charges.push(pneuDim.charge);\r\n                }\r\n            })\r\n            setHauteurs(\r\n                hauteurs.filter((q, idx) => \r\n                hauteurs.indexOf(q) === idx)\r\n            )\r\n            setDiametres(\r\n                diametres.filter((q, idx) => \r\n                diametres.indexOf(q) === idx)\r\n            )\r\n            setCharges(\r\n                charges.filter((q, idx) => \r\n                charges.indexOf(q) === idx)\r\n            )\r\n    },[largeur])\r\n    useEffect(() => {\r\n        let diametres = []\r\n        let charges = []\r\n            pneuDimension.map((pneuDim)=>{\r\n                if(pneuDim.largeur==largeur && pneuDim.hauteur==hauteur){\r\n                    diametres.push(pneuDim.diametre);\r\n                    charges.push(pneuDim.charge);\r\n                }\r\n            })\r\n            setDiametres(\r\n                diametres.filter((q, idx) => \r\n                diametres.indexOf(q) === idx)\r\n            )\r\n            setCharges(\r\n                charges.filter((q, idx) => \r\n                charges.indexOf(q) === idx)\r\n            )\r\n    },[hauteur])\r\n    useEffect(() => {\r\n        let charges = []\r\n            pneuDimension.map((pneuDim)=>{\r\n                if(pneuDim.largeur==largeur && pneuDim.hauteur==hauteur && pneuDim.diametre==diametre){\r\n                    charges.push(pneuDim.charge);\r\n                }\r\n            })\r\n            console.log(charges)\r\n            setCharges(\r\n                charges.filter((q, idx) => \r\n                charges.indexOf(q) === idx)\r\n            )\r\n    },[diametre])\r\n\r\n//filtre recherche par vehicule\r\n    useEffect(() => {\r\n        let modeles = []\r\n        let motorisations = []\r\n        let annee = []\r\n        let tailles = []\r\n            pneuVehicule.map((pneuVeh)=>{\r\n                if(pneuVeh.brand==marqueV){\r\n                    modeles.push(pneuVeh.model);\r\n                    motorisations.push(pneuVeh.engine);\r\n                    annee.push(pneuVeh.ad);\r\n                    tailles.push(pneuVeh.dimension_complete);\r\n                }\r\n            })\r\n            setModeles(\r\n                modeles.filter((q, idx) => \r\n                modeles.indexOf(q) === idx)\r\n            )\r\n            setMotorisations(\r\n                motorisations.filter((q, idx) => \r\n                motorisations.indexOf(q) === idx)\r\n            )\r\n            setAnnees(\r\n                annee.filter((q, idx) => \r\n                annee.indexOf(q) === idx)\r\n            )\r\n            setTailles(\r\n                tailles.filter((q, idx) => \r\n                tailles.indexOf(q) === idx)\r\n            )\r\n    },[marqueV])\r\n\r\n    useEffect(() => {\r\n        let motorisations = []\r\n        let annee = []\r\n        let tailles = []\r\n            pneuVehicule.map((pneuVeh)=>{\r\n                if(pneuVeh.brand==marqueV && pneuVeh.model==modele){\r\n                    motorisations.push(pneuVeh.engine);\r\n                    annee.push(pneuVeh.ad);\r\n                    tailles.push(pneuVeh.dimension_complete);\r\n                }\r\n            })\r\n            setMotorisations(\r\n                motorisations.filter((q, idx) => \r\n                motorisations.indexOf(q) === idx)\r\n            )\r\n            setAnnees(\r\n                annee.filter((q, idx) => \r\n                annee.indexOf(q) === idx)\r\n            )\r\n            setTailles(\r\n                tailles.filter((q, idx) => \r\n                tailles.indexOf(q) === idx)\r\n            )\r\n    },[modele])\r\n\r\n    useEffect(() => {\r\n        let annee = []\r\n        let tailles = []\r\n            pneuVehicule.map((pneuVeh)=>{\r\n                if(pneuVeh.brand==marqueV && pneuVeh.model==modele && pneuVeh.engine==motorisation){\r\n                    annee.push(pneuVeh.ad);\r\n                    tailles.push(pneuVeh.dimension_complete);\r\n                }\r\n            })\r\n            setAnnees(\r\n                annee.filter((q, idx) => \r\n                annee.indexOf(q) === idx)\r\n            )\r\n            setTailles(\r\n                tailles.filter((q, idx) => \r\n                tailles.indexOf(q) === idx)\r\n            )\r\n    },[motorisation])\r\n\r\n    useEffect(() => {\r\n        let tailles = []\r\n            pneuVehicule.map((pneuVeh)=>{\r\n                if(pneuVeh.brand==marqueV && pneuVeh.model==modele && pneuVeh.engine==motorisation && pneuVeh.ad==annee){\r\n                    tailles.push(pneuVeh.dimension_complete);\r\n                }\r\n            })\r\n            setTailles(\r\n                tailles.filter((q, idx) => \r\n                tailles.indexOf(q) === idx)\r\n            )\r\n    },[annee])\r\n\r\n\r\n\r\n    //recherche par dimension\r\n    useEffect(() => {\r\n        axios.get(`${process.env.REACT_APP_API_URL}/search/dimension`)\r\n        .then(res => {\r\n            setPneuDimension(res.data)\r\n            const pneusDim = res.data;\r\n            let lars = []\r\n            let hauts = []\r\n            let diams = []\r\n            let chars = []\r\n            let vites = []\r\n            let mars = []\r\n            const unique = (value, index, self)=>{\r\n                return self.indexOf(value) === index\r\n            }\r\n            pneusDim.map((pneudim)=>{\r\n            lars.push(parseFloat(pneudim.largeur))\r\n            hauts.push(pneudim.hauteur)\r\n            diams.push(parseFloat(pneudim.diametre))\r\n            chars.push(parseInt(pneudim.charge))\r\n            vites.push(pneudim.vitesse)\r\n            mars.push(pneudim.marque)\r\n            })\r\n            const uniquelargeur = lars.filter(unique)\r\n            const uniquehauteur = hauts.filter(unique)\r\n            const uniquediametre = diams.filter(unique)\r\n            const uniquecharge = chars.filter(unique)\r\n            const uniquevitesse = vites.filter(unique)\r\n            const uniquemarque = mars.filter(unique)\r\n\r\n            uniquelargeur.sort(function(a, b) {\r\n                return a - b;\r\n            });\r\n            uniquehauteur.sort()\r\n            uniquediametre.sort(function(a, b) {\r\n                return a - b;\r\n            });\r\n            uniquecharge.sort(function(a, b) {\r\n                return a - b;\r\n            });\r\n            uniquevitesse.sort();\r\n            uniquemarque.sort();\r\n            setLargeurs(uniquelargeur)\r\n            setHauteurs(uniquehauteur)\r\n            setDiametres(uniquediametre)\r\n            setCharges(uniquecharge)\r\n            setVitesse(uniquevitesse)\r\n            setMarques(uniquemarque)     \r\n        })\r\n        .catch(err => {\r\n            console.log(err)\r\n        })\r\n    }, [])\r\n\r\n\r\n    //recherche par vehicule\r\n    useEffect(() => {\r\n        axios.get(`${process.env.REACT_APP_API_URL}/search/vehicule`)\r\n        .then(res => {\r\n            setPneuVehicule(res.data);\r\n            const pneuVehs = res.data;\r\n            let marques = []\r\n            let modeles = []\r\n            let motorisations = []\r\n            let annees = []\r\n            let tailles = []\r\n            const unique = (value, index, self)=>{\r\n                return self.indexOf(value) === index\r\n            }\r\n            pneuVehs.map((pneuVeh)=>{\r\n                marques.push(pneuVeh.brand)\r\n                modeles.push(pneuVeh.model)\r\n                motorisations.push(pneuVeh.engine)\r\n                annees.push(pneuVeh.ad)\r\n                tailles.push(pneuVeh.dimension_complete)\r\n            })\r\n            const uniquemarque = marques.filter(unique)\r\n            const uniquemodele = modeles.filter(unique)\r\n            const uniquemotorisation = motorisations.filter(unique)\r\n            const uniqueannee = annees.filter(unique)\r\n            const uniquetaille = tailles.filter(unique)\r\n\r\n            uniquemarque.sort();\r\n            uniquemodele.sort()\r\n            uniquemotorisation.sort();\r\n            uniqueannee.sort();\r\n            uniquetaille.sort();\r\n            \r\n            setMarqueVs(uniquemarque);\r\n            setModeles(uniquemodele);\r\n            setMotorisations(uniquemotorisation);\r\n            setAnnees(uniqueannee);\r\n            setTailles(uniquetaille)\r\n        })\r\n        .catch(err => {\r\n            console.log(err)\r\n        })\r\n    }, []);\r\n    //submit data to backend\r\n  const handleSubmit = e => {\r\n    e.preventDefault()\r\n    axios.post(`${process.env.REACT_APP_API_URL}/search/pneus`, {\r\n        largeur, hauteur, diametre, charge, vitesse, marque\r\n         }).then(res => {\r\n           console.log(largeur+' '+hauteur+' '+diametre+' '+charge+' '+vitesse+' '+marque)\r\n           console.log(res.data)\r\n           \r\n         }).catch(err => {\r\n          console.log(err)\r\n         })\r\n    }\r\n\r\n    return(\r\n        <React.Fragment>\r\n            <Styles>\r\n                <div className='navbar-item'>\r\n                    <Navbar/>\r\n                </div>\r\n                <div className='promo-item'>\r\n                    <div className='promo-left-side'></div>\r\n                    <div className='promo-right-side'></div>\r\n                </div>\r\n                <div className='content-item'>\r\n                    <div className='search-item'>\r\n                        <Tab.Container id=\"controlled-tab-example\" activeKey={key} onSelect={key => setKey(key)}>\r\n                            <Row>\r\n                                <Col>\r\n                                    <Nav.Link  \r\n                                    eventKey=\"dimension\" \r\n                                    style={key === \"dimension\" ? ActiveStyle : inActiveStyle}\r\n                                    >\r\n                                        <AiFillCaretRight style={{marginRight:'1%'}}/>\r\n                                        Recherche Par dimension\r\n                                    </Nav.Link>\r\n                                </Col>\r\n                                <Col>\r\n                                    <Nav.Link  \r\n                                    eventKey=\"vehicule\" \r\n                                    style={key === \"vehicule\" ? ActiveStyle : inActiveStyle}\r\n                                    >\r\n                                         <AiFillCaretRight style={{marginRight:'1%'}}/>\r\n                                        Recherche Par vehicule\r\n                                    </Nav.Link>\r\n                                </Col>\r\n                            </Row>\r\n                            <Tab.Content>\r\n                                <Tab.Pane eventKey=\"dimension\" >\r\n                                    <form onSubmit={handleSubmit}>\r\n                                        <div className='search-first-row'>\r\n                                            <Form.Group className='search-input' controlId=\"exampleForm.ControlSelect1\">\r\n                                                <Form.Label>Largeur</Form.Label>\r\n                                                <Form.Control \r\n                                                    as=\"select\"\r\n                                                    value={largeur}\r\n                                                    onChange={handleChangeDimension('largeur')}\r\n                                                    >\r\n                                                    {largeurs.map((largeur)=>\r\n                                                        <option>{largeur}</option>\r\n                                                    )} \r\n                                                </Form.Control>\r\n                                            </Form.Group>\r\n                                            <Form.Group className='search-input' controlId=\"exampleForm.ControlSelect1\">\r\n                                                <Form.Label>hauteur</Form.Label>\r\n                                                <Form.Control \r\n                                                    as=\"select\"\r\n                                                    value={hauteur}\r\n                                                    onChange={handleChangeDimension('hauteur')}\r\n                                                    >\r\n                                                        {hauteurs.map((hauteur)=>\r\n                                                        <option>{hauteur}</option>\r\n                                                    )} \r\n                                                </Form.Control>\r\n                                            </Form.Group>\r\n                                            <Form.Group className='search-input' controlId=\"exampleForm.ControlSelect1\">\r\n                                                <Form.Label>Diametre</Form.Label>\r\n                                                <Form.Control as=\"select\"\r\n                                                    value={diametre}\r\n                                                    onChange={handleChangeDimension('diametre')}\r\n                                                    >\r\n                                                        {diametres.map((diametre)=>\r\n                                                        <option>{diametre}</option>\r\n                                                    )} \r\n                                                </Form.Control>\r\n                                            </Form.Group>\r\n                                            <Form.Group className='search-input' controlId=\"exampleForm.ControlSelect1\">\r\n                                                <Form.Label>Charge</Form.Label>\r\n                                                <Form.Control as=\"select\"\r\n                                                    value={charge}\r\n                                                    onChange={handleChangeDimension('charge')}\r\n                                                    >\r\n                                                        {charges.map((charge)=>\r\n                                                        <option>{charge}</option>\r\n                                                    )} \r\n                                                </Form.Control>\r\n                                            </Form.Group>\r\n                                            <Form.Group className='search-input' controlId=\"exampleForm.ControlSelect1\">\r\n                                                <Form.Label>Vitesse</Form.Label>\r\n                                                <Form.Control as=\"select\"\r\n                                                    value={vitesse}\r\n                                                    onChange={handleChangeDimension('vitesse')}\r\n                                                    >\r\n                                                        <option>Tous</option>\r\n                                                        {vitesses.map((vitesse)=>\r\n                                                        <option>{vitesse}</option>\r\n                                                    )} \r\n                                                </Form.Control>\r\n                                            </Form.Group>\r\n                                            <Form.Group className='search-input' controlId=\"exampleForm.ControlSelect1\">\r\n                                                <Form.Label>Marque</Form.Label>\r\n                                                <Form.Control as=\"select\"\r\n                                                    value={marque}\r\n                                                    onChange={handleChangeDimension('marque')}\r\n                                                    >\r\n                                                        <option>Tous</option> \r\n                                                        {marques.map((marque)=>\r\n                                                        <option>{marque}</option>\r\n                                                    )} \r\n                                                </Form.Control>\r\n                                            </Form.Group>\r\n                                        </div>\r\n                                        <div className='search-second-row'>\r\n                                            <button className='search-button'>Rechercher</button>\r\n                                        </div>\r\n                                    </form>\r\n                                </Tab.Pane>\r\n                                <Tab.Pane eventKey=\"vehicule\">\r\n                                    <form>   \r\n                                        <div className='search-first-row'>\r\n                                            <Form.Group className='search-input' controlId=\"exampleForm.ControlSelect1\">\r\n                                                <Form.Label>Marque</Form.Label>\r\n                                                <Form.Control as=\"select\"\r\n                                                    value={marqueV}\r\n                                                    onChange={handleChangeVehicule('marqueV')}\r\n                                                    >\r\n                                                    {marqueVs.map((marque)=>\r\n                                                    <option>{marque}</option>\r\n                                                    )} \r\n                                                </Form.Control>\r\n                                            </Form.Group>\r\n                                            <Form.Group className='search-input' controlId=\"exampleForm.ControlSelect1\">\r\n                                                <Form.Label>Modele</Form.Label>\r\n                                                <Form.Control as=\"select\"\r\n                                                    value={modele}\r\n                                                    onChange={handleChangeVehicule('modele')}\r\n                                                    >\r\n                                                    {modeles.map((modele)=>\r\n                                                    <option>{modele}</option>\r\n                                                    )} \r\n                                                </Form.Control>\r\n                                            </Form.Group>\r\n                                            <Form.Group className='search-input' controlId=\"exampleForm.ControlSelect1\">\r\n                                                <Form.Label>Motorisation</Form.Label>\r\n                                                <Form.Control as=\"select\"\r\n                                                    value={motorisation}\r\n                                                    onChange={handleChangeVehicule('motorisation')}\r\n                                                    >\r\n                                                    {motorisations.map((motorisation)=>\r\n                                                    <option>{motorisation}</option>\r\n                                                    )} \r\n                                                </Form.Control>\r\n                                            </Form.Group>\r\n                                            <Form.Group className='search-input' controlId=\"exampleForm.ControlSelect1\">\r\n                                                <Form.Label>Annee</Form.Label>\r\n                                                <Form.Control as=\"select\"\r\n                                                    value={annee}\r\n                                                    onChange={handleChangeVehicule('annee')}\r\n                                                    >\r\n                                                    {annees.map((annee)=>\r\n                                                    <option>{annee}</option>\r\n                                                    )} \r\n                                                </Form.Control>\r\n                                            </Form.Group>\r\n                                            <Form.Group className='search-input' controlId=\"exampleForm.ControlSelect1\">\r\n                                                <Form.Label>Taille</Form.Label>\r\n                                                <Form.Control as=\"select\"\r\n                                                    value={taille}\r\n                                                    onChange={handleChangeVehicule('taille')}\r\n                                                    >\r\n                                                    {tailles.map((taille)=>\r\n                                                    <option>{taille}</option>\r\n                                                    )} \r\n                                                </Form.Control>\r\n                                            </Form.Group>\r\n                                        </div>\r\n                                        <div className='search-second-row'>\r\n                                        <button type='submit' className='search-button'>Rechercher</button>\r\n                                        </div>\r\n                                    </form> \r\n                                </Tab.Pane>\r\n                            </Tab.Content>\r\n                        </Tab.Container>\r\n                    </div>\r\n                <div>\r\n                <p>Le Lorem Ipsum est simplement du faux texte employé dans la composition et la mise en page avant impression. Le Lorem Ipsum est le faux texte standard de l'imprimerie depuis les années 1500, quand un imprimeur anonyme assembla ensemble des morceaux de texte pour réaliser un livre spécimen de polices de texte.</p>\r\n                <p>Le Lorem Ipsum est simplement du faux texte employé dans la composition et la mise en page avant impression. Le Lorem Ipsum est le faux texte standard de l'imprimerie depuis les années 1500, quand un imprimeur anonyme assembla ensemble des morceaux de texte pour réaliser un livre spécimen de polices de texte.</p>\r\n                <p>Le Lorem Ipsum est simplement du faux texte employé dans la composition et la mise en page avant impression. Le Lorem Ipsum est le faux texte standard de l'imprimerie depuis les années 1500, quand un imprimeur anonyme assembla ensemble des morceaux de texte pour réaliser un livre spécimen de polices de texte.</p>\r\n\r\n                    <p>Le Lorem Ipsum est simplement du faux texte employé dans la composition et la mise en page avant impression. Le Lorem Ipsum est le faux texte standard de l'imprimerie depuis les années 1500, quand un imprimeur anonyme assembla ensemble des morceaux de texte pour réaliser un livre spécimen de polices de texte.</p>\r\n                </div>\r\n                </div>\r\n            </Styles>\r\n        </React.Fragment>\r\n    )\r\n}\r\nexport default Home; \r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n/*\r\nconst Styles = styled.div`\r\ndisplay: grid;\r\ngrid-template: repeat(16, [row] 1fr) / repeat(14, [col] 1fr);\r\nmargin-bottom:5%;\r\n\r\n.item-1 {\r\n    grid-column: col 1 / span 14;\r\n    grid-row: row 1 / span 2 ;\r\n    background: transparent;\r\n    z-index:1;\r\n}\r\n.item-3 {\r\n  grid-column: col 1 / span 5;\r\n  grid-row: row 1 / span 11 ;\r\n  background: #2F3945;\r\n  opacity: 0.8;\r\n  display:flex;\r\n  flex-direction:row;\r\n  justify-content:flex-end;\r\n  align-items: center;\r\n}\r\n\r\n.item-4 {\r\n  grid-column: col 6 / span 11;\r\n  grid-row: row 1 / span 11 ;\r\n  background: -webkit-linear-gradient( rgba(0, 0, 0, 0.3) 100%,transparent 100%), url(${redCar});\r\n  background-size:cover;\r\n  display:flex;\r\n  flex-direction:row;\r\n  justify-content:flex-start;\r\n  align-items:center;\r\n}\r\n\r\n.item-5 {\r\n  grid-column: col 2 / span 12;\r\n  grid-row: row 9 / span 4;\r\n  background: linear-gradient(90.84deg, #EF1A23 0.61%, #FB3C29 99.42%);  \r\n  opacity: 0.8;\r\n  color:white;\r\n  z-index: 1;\r\n}\r\n.item-6 {\r\n  grid-column: col 1 / span 14;\r\n  grid-row: row 12 / span 4 ;\r\n  background: linear-gradient(360deg, #FFFFFF 0%, rgba(255, 255, 255, 0.08) 57.24%, rgba(47, 57, 69, 0.54) 104.71%);\r\n}\r\n.item-7{\r\n  grid-column: col 2 / span 12;\r\n  grid-row: row 14 / span 4;\r\n  background: transparent;\r\n}\r\n.item-8{\r\n  grid-column: col 2 / span 12;\r\n  grid-row: row 3 / span 5;\r\n  background: url(${remise}) no-repeat;\r\n  z-index:1;\r\n}\r\n.search-first-row{\r\n    display:flex;\r\n    flex-direction:row;\r\n    padding:1%;\r\n    height:50%;\r\n    justify-content:center;\r\n    align-items:center;\r\n}\r\n.search-second-row{\r\n    display:flex;\r\n    flex-direction:row;\r\n    justify-content:flex-end;\r\n    align-items:flex-end;\r\n    height:50%;\r\n}\r\n.search-button{\r\n    font-size:1.5em;\r\n    font-weight:600;\r\n    background:#2F3945;\r\n    border-radius:5px;\r\n    border:none;\r\n    color:white;\r\n    margin: 0 3% 0 0;\r\n}\r\n.search-input{\r\n    margin:1% 1%;\r\n    width: 12%;\r\n}\r\n\r\n.coordonnee{\r\n    display:flex;\r\n    flex-direction:row;\r\n    align-items:center;\r\n    justify-content:center;\r\n    width:100%;\r\n    height:100%;\r\n    padding: 2% 0;\r\n}\r\n.card-coordonnee{\r\n    display:flex;\r\n    flex-direction:column;\r\n    align-items:center;\r\n    justify-content:center;\r\n    width:35%;\r\n    height:100%;\r\n    border-radius:10px;\r\n}\r\n.card-col-1{\r\n    display:flex;\r\n    flex-direction:column;\r\n    align-items:center;\r\n    justify-content:center;\r\n    width:100%;\r\n    height:100%;\r\n    background:transparent;\r\n    border-radius:50%\r\n}\r\n.card-col-2{\r\n    display:flex;\r\n    flex-direction:column;\r\n    align-items:center;\r\n    justify-content:center;\r\n    width:100%;\r\n    height:100%;\r\n}\r\n.card-col-3{\r\n    display:flex;\r\n    flex-direction:column;\r\n    align-items:flex-start;\r\n    justify-content:center;\r\n    width:5%;\r\n    height:100%;\r\n    padding-left:5%;\r\n}\r\n\r\n.marques{\r\n    padding:0 7%;\r\n    margin: 5% 0;\r\n}\r\n.titre-marques{\r\n    font-size:2em;\r\n    font-weight:600;\r\n    color:#555;\r\n    font-family: 'Teko', sans-serif;\r\n}\r\n\r\n`;\r\n\r\nfunction Home(props) {\r\n    //search styling\r\n    const [key, setKey] = useState(\"dimension\");\r\n    const ActiveStyle = {\r\n        textAlign: \"left\",\r\n        background: \"transparent\",\r\n        color: \"white\",\r\n        fontSize:'1.5em',\r\n        fontFamily:'Teko, sans-serif ' \r\n    };\r\n    const inActiveStyle = {\r\n        ...ActiveStyle,\r\n        background: \"rgba(0, 0, 0, 0.4)\",\r\n        color: \"white\",\r\n        fontSize:'1.5em',\r\n        fontFamily:'Teko, sans-serif ' \r\n\r\n    };\r\n\r\n    //data management\r\n    const [pneuDimension, setPneuDimension] = useState([])\r\n    const [pneuVehicule, setPneuVehicule] = useState([])\r\n    const [formDataDimension, setFormDataDimension] = useState({\r\n        largeur :'--', \r\n        hauteur :'--',\r\n        diametre : '--',\r\n        charge :'--', \r\n        vitesse:'Tous',\r\n        marque :'Tous'\r\n    })\r\n    const [formDataVehicule, setFormDataVehicule] = useState({\r\n        marqueV :'--', \r\n        modele :'--',\r\n        motorisation : '--',\r\n        annee :'--', \r\n        taille:'-- --'\r\n    })\r\n\r\n    //les dimensions 'dimension'\r\n    const [largeurs, setLargeurs]= useState([]);\r\n    const [hauteurs, setHauteurs]= useState([]);\r\n    const [diametres, setDiametres]= useState([]);\r\n    const [charges, setCharges]= useState([]);\r\n    const [vitesses, setVitesse] = useState([]);\r\n    const [marques, setMarques]= useState([]);\r\n    \r\n    //les dimensions vehicule\r\n    const [marqueVs, setMarqueVs] = useState([]);\r\n    const [modeles, setModeles] = useState([]);\r\n    const [motorisations, setMotorisations] = useState([]);\r\n    const [annees, setAnnees] = useState([]);\r\n    const [tailles, setTailles] = useState([]);\r\n\r\n    //\r\n    const {largeur, hauteur, diametre, charge, vitesse, marque} = formDataDimension\r\n    const {marqueV, modele, motorisation, annee, taille} = formDataVehicule\r\n\r\n    //handle change from inputs\r\n    const handleChangeDimension = text => e => {\r\n        setFormDataDimension({...formDataDimension, [text]: e.target.value})\r\n        console.log(formDataDimension)\r\n    }\r\n\r\n    const handleChangeVehicule = text => e => {\r\n        setFormDataVehicule({...formDataVehicule, [text]: e.target.value})\r\n    }\r\n\r\n    useEffect(() => {\r\n        let hauteurs = []\r\n        let diametres = []\r\n        let charges = []\r\n            pneuDimension.map((pneuDim)=>{\r\n                if(pneuDim.largeur==largeur){\r\n                    hauteurs.push(pneuDim.hauteur);\r\n                    diametres.push(pneuDim.diametre);\r\n                    charges.push(pneuDim.charge);\r\n                }\r\n            })\r\n            setHauteurs(\r\n                hauteurs.filter((q, idx) => \r\n                hauteurs.indexOf(q) === idx)\r\n            )\r\n            setDiametres(\r\n                diametres.filter((q, idx) => \r\n                diametres.indexOf(q) === idx)\r\n            )\r\n            setCharges(\r\n                charges.filter((q, idx) => \r\n                charges.indexOf(q) === idx)\r\n            )\r\n    },[largeur])\r\n    useEffect(() => {\r\n        let diametres = []\r\n        let charges = []\r\n            pneuDimension.map((pneuDim)=>{\r\n                if(pneuDim.largeur==largeur && pneuDim.hauteur==hauteur){\r\n                    diametres.push(pneuDim.diametre);\r\n                    charges.push(pneuDim.charge);\r\n                }\r\n            })\r\n            setDiametres(\r\n                diametres.filter((q, idx) => \r\n                diametres.indexOf(q) === idx)\r\n            )\r\n            setCharges(\r\n                charges.filter((q, idx) => \r\n                charges.indexOf(q) === idx)\r\n            )\r\n    },[hauteur])\r\n    useEffect(() => {\r\n        let charges = []\r\n            pneuDimension.map((pneuDim)=>{\r\n                if(pneuDim.largeur==largeur && pneuDim.hauteur==hauteur && pneuDim.diametre==diametre){\r\n                    charges.push(pneuDim.charge);\r\n                }\r\n            })\r\n            console.log(charges)\r\n            setCharges(\r\n                charges.filter((q, idx) => \r\n                charges.indexOf(q) === idx)\r\n            )\r\n    },[diametre])\r\n\r\n//filtre recherche par vehicule\r\n    useEffect(() => {\r\n        let modeles = []\r\n        let motorisations = []\r\n        let annee = []\r\n        let tailles = []\r\n            pneuVehicule.map((pneuVeh)=>{\r\n                if(pneuVeh.brand==marqueV){\r\n                    modeles.push(pneuVeh.model);\r\n                    motorisations.push(pneuVeh.engine);\r\n                    annee.push(pneuVeh.ad);\r\n                    tailles.push(pneuVeh.dimension_complete);\r\n                }\r\n            })\r\n            setModeles(\r\n                modeles.filter((q, idx) => \r\n                modeles.indexOf(q) === idx)\r\n            )\r\n            setMotorisations(\r\n                motorisations.filter((q, idx) => \r\n                motorisations.indexOf(q) === idx)\r\n            )\r\n            setAnnees(\r\n                annee.filter((q, idx) => \r\n                annee.indexOf(q) === idx)\r\n            )\r\n            setTailles(\r\n                tailles.filter((q, idx) => \r\n                tailles.indexOf(q) === idx)\r\n            )\r\n    },[marqueV])\r\n\r\n    useEffect(() => {\r\n        let motorisations = []\r\n        let annee = []\r\n        let tailles = []\r\n            pneuVehicule.map((pneuVeh)=>{\r\n                if(pneuVeh.brand==marqueV && pneuVeh.model==modele){\r\n                    motorisations.push(pneuVeh.engine);\r\n                    annee.push(pneuVeh.ad);\r\n                    tailles.push(pneuVeh.dimension_complete);\r\n                }\r\n            })\r\n            setMotorisations(\r\n                motorisations.filter((q, idx) => \r\n                motorisations.indexOf(q) === idx)\r\n            )\r\n            setAnnees(\r\n                annee.filter((q, idx) => \r\n                annee.indexOf(q) === idx)\r\n            )\r\n            setTailles(\r\n                tailles.filter((q, idx) => \r\n                tailles.indexOf(q) === idx)\r\n            )\r\n    },[modele])\r\n\r\n    useEffect(() => {\r\n        let annee = []\r\n        let tailles = []\r\n            pneuVehicule.map((pneuVeh)=>{\r\n                if(pneuVeh.brand==marqueV && pneuVeh.model==modele && pneuVeh.engine==motorisation){\r\n                    annee.push(pneuVeh.ad);\r\n                    tailles.push(pneuVeh.dimension_complete);\r\n                }\r\n            })\r\n            setAnnees(\r\n                annee.filter((q, idx) => \r\n                annee.indexOf(q) === idx)\r\n            )\r\n            setTailles(\r\n                tailles.filter((q, idx) => \r\n                tailles.indexOf(q) === idx)\r\n            )\r\n    },[motorisation])\r\n\r\n    useEffect(() => {\r\n        let tailles = []\r\n            pneuVehicule.map((pneuVeh)=>{\r\n                if(pneuVeh.brand==marqueV && pneuVeh.model==modele && pneuVeh.engine==motorisation && pneuVeh.ad==annee){\r\n                    tailles.push(pneuVeh.dimension_complete);\r\n                }\r\n            })\r\n            setTailles(\r\n                tailles.filter((q, idx) => \r\n                tailles.indexOf(q) === idx)\r\n            )\r\n    },[annee])\r\n\r\n\r\n\r\n    //recherche par dimension\r\n    useEffect(() => {\r\n        axios.get(`${process.env.REACT_APP_API_URL}/search/dimension`)\r\n        .then(res => {\r\n            setPneuDimension(res.data)\r\n            const pneusDim = res.data;\r\n            let lars = []\r\n            let hauts = []\r\n            let diams = []\r\n            let chars = []\r\n            let vites = []\r\n            let mars = []\r\n            const unique = (value, index, self)=>{\r\n                return self.indexOf(value) === index\r\n            }\r\n            pneusDim.map((pneudim)=>{\r\n            lars.push(parseFloat(pneudim.largeur))\r\n            hauts.push(pneudim.hauteur)\r\n            diams.push(parseFloat(pneudim.diametre))\r\n            chars.push(parseInt(pneudim.charge))\r\n            vites.push(pneudim.vitesse)\r\n            mars.push(pneudim.marque)\r\n            })\r\n            const uniquelargeur = lars.filter(unique)\r\n            const uniquehauteur = hauts.filter(unique)\r\n            const uniquediametre = diams.filter(unique)\r\n            const uniquecharge = chars.filter(unique)\r\n            const uniquevitesse = vites.filter(unique)\r\n            const uniquemarque = mars.filter(unique)\r\n\r\n            uniquelargeur.sort(function(a, b) {\r\n                return a - b;\r\n            });\r\n            uniquehauteur.sort()\r\n            uniquediametre.sort(function(a, b) {\r\n                return a - b;\r\n            });\r\n            uniquecharge.sort(function(a, b) {\r\n                return a - b;\r\n            });\r\n            uniquevitesse.sort();\r\n            uniquemarque.sort();\r\n            setLargeurs(uniquelargeur)\r\n            setHauteurs(uniquehauteur)\r\n            setDiametres(uniquediametre)\r\n            setCharges(uniquecharge)\r\n            setVitesse(uniquevitesse)\r\n            setMarques(uniquemarque)     \r\n        })\r\n        .catch(err => {\r\n            console.log(err)\r\n        })\r\n    }, [])\r\n\r\n\r\n    //recherche par vehicule\r\n    useEffect(() => {\r\n        axios.get(`${process.env.REACT_APP_API_URL}/search/vehicule`)\r\n        .then(res => {\r\n            setPneuVehicule(res.data);\r\n            const pneuVehs = res.data;\r\n            let marques = []\r\n            let modeles = []\r\n            let motorisations = []\r\n            let annees = []\r\n            let tailles = []\r\n            const unique = (value, index, self)=>{\r\n                return self.indexOf(value) === index\r\n            }\r\n            pneuVehs.map((pneuVeh)=>{\r\n                marques.push(pneuVeh.brand)\r\n                modeles.push(pneuVeh.model)\r\n                motorisations.push(pneuVeh.engine)\r\n                annees.push(pneuVeh.ad)\r\n                tailles.push(pneuVeh.dimension_complete)\r\n            })\r\n            const uniquemarque = marques.filter(unique)\r\n            const uniquemodele = modeles.filter(unique)\r\n            const uniquemotorisation = motorisations.filter(unique)\r\n            const uniqueannee = annees.filter(unique)\r\n            const uniquetaille = tailles.filter(unique)\r\n\r\n            uniquemarque.sort();\r\n            uniquemodele.sort()\r\n            uniquemotorisation.sort();\r\n            uniqueannee.sort();\r\n            uniquetaille.sort();\r\n            \r\n            setMarqueVs(uniquemarque);\r\n            setModeles(uniquemodele);\r\n            setMotorisations(uniquemotorisation);\r\n            setAnnees(uniqueannee);\r\n            setTailles(uniquetaille)\r\n        })\r\n        .catch(err => {\r\n            console.log(err)\r\n        })\r\n    }, []);\r\n    //submit data to backend\r\n  const handleSubmit = e => {\r\n    e.preventDefault()\r\n    axios.post(`${process.env.REACT_APP_API_URL}/search/pneus`, {\r\n        largeur, hauteur, diametre, charge, vitesse, marque\r\n         }).then(res => {\r\n           console.log(largeur+' '+hauteur+' '+diametre+' '+charge+' '+vitesse+' '+marque)\r\n           console.log(res.data)\r\n           \r\n         }).catch(err => {\r\n          console.log(err)\r\n         })\r\n    }\r\n  \r\n    return(\r\n        <React.Fragment>\r\n            <Styles>\r\n                <div className='item-1'><Navbar/></div>\r\n                <div className='item-8'></div>\r\n                <div className='item-3'>\r\n                        <img\r\n                            src={logo_transparent}\r\n                            width='60'\r\n                            height='150'\r\n                            style={{margin:'0 0 50% 0', padding:'0'}}\r\n                        />\r\n                </div>\r\n                <div className='item-4'>\r\n                    <img\r\n                        src={service}\r\n                        width='20'\r\n                        height='150'\r\n                        style={{margin:'0 0 28% 0', padding:'0'}}\r\n                    />\r\n                </div>\r\n                <div className='item-5'>\r\n                <Tab.Container id=\"controlled-tab-example\" activeKey={key} onSelect={key => setKey(key)}>\r\n                            <Row>\r\n                                <Col>\r\n                                    <Nav.Link  \r\n                                    eventKey=\"dimension\" \r\n                                    style={key === \"dimension\" ? ActiveStyle : inActiveStyle}\r\n                                    >\r\n                                        <AiFillCaretRight style={{marginRight:'1%'}}/>\r\n                                        Recherche Par dimension\r\n                                    </Nav.Link>\r\n                                </Col>\r\n                                <Col>\r\n                                    <Nav.Link  \r\n                                    eventKey=\"vehicule\" \r\n                                    style={key === \"vehicule\" ? ActiveStyle : inActiveStyle}\r\n                                    >\r\n                                         <AiFillCaretRight style={{marginRight:'1%'}}/>\r\n                                        Recherche Par vehicule\r\n                                    </Nav.Link>\r\n                                </Col>\r\n                            </Row>\r\n                            <Tab.Content>\r\n                                <Tab.Pane eventKey=\"dimension\" >\r\n                                <form onSubmit={handleSubmit}>\r\n                                    <div className='search-first-row'>\r\n                                        <Form.Group className='search-input' controlId=\"exampleForm.ControlSelect1\">\r\n                                            <Form.Label>Largeur</Form.Label>\r\n                                            <Form.Control \r\n                                                as=\"select\"\r\n                                                value={largeur}\r\n                                                onChange={handleChangeDimension('largeur')}\r\n                                            >\r\n                                                {largeurs.map((largeur)=>\r\n                                                    <option>{largeur}</option>\r\n                                                )} \r\n                                            </Form.Control>\r\n                                        </Form.Group>\r\n                                        <Form.Group className='search-input' controlId=\"exampleForm.ControlSelect1\">\r\n                                            <Form.Label>hauteur</Form.Label>\r\n                                            <Form.Control \r\n                                               as=\"select\"\r\n                                               value={hauteur}\r\n                                               onChange={handleChangeDimension('hauteur')}\r\n                                               >\r\n                                                 {hauteurs.map((hauteur)=>\r\n                                                    <option>{hauteur}</option>\r\n                                                )} \r\n                                            </Form.Control>\r\n                                        </Form.Group>\r\n                                        <Form.Group className='search-input' controlId=\"exampleForm.ControlSelect1\">\r\n                                            <Form.Label>Diametre</Form.Label>\r\n                                            <Form.Control as=\"select\"\r\n                                               value={diametre}\r\n                                               onChange={handleChangeDimension('diametre')}\r\n                                               >\r\n                                                 {diametres.map((diametre)=>\r\n                                                    <option>{diametre}</option>\r\n                                                )} \r\n                                            </Form.Control>\r\n                                        </Form.Group>\r\n                                        <Form.Group className='search-input' controlId=\"exampleForm.ControlSelect1\">\r\n                                            <Form.Label>Charge</Form.Label>\r\n                                            <Form.Control as=\"select\"\r\n                                               value={charge}\r\n                                               onChange={handleChangeDimension('charge')}\r\n                                               >\r\n                                                 {charges.map((charge)=>\r\n                                                    <option>{charge}</option>\r\n                                                )} \r\n                                            </Form.Control>\r\n                                        </Form.Group>\r\n                                        <Form.Group className='search-input' controlId=\"exampleForm.ControlSelect1\">\r\n                                            <Form.Label>Vitesse</Form.Label>\r\n                                            <Form.Control as=\"select\"\r\n                                               value={vitesse}\r\n                                               onChange={handleChangeDimension('vitesse')}\r\n                                               >\r\n                                                   <option>Tous</option>\r\n                                                 {vitesses.map((vitesse)=>\r\n                                                    <option>{vitesse}</option>\r\n                                                )} \r\n                                            </Form.Control>\r\n                                        </Form.Group>\r\n                                        <Form.Group className='search-input' controlId=\"exampleForm.ControlSelect1\">\r\n                                            <Form.Label>Marque</Form.Label>\r\n                                            <Form.Control as=\"select\"\r\n                                               value={marque}\r\n                                               onChange={handleChangeDimension('marque')}\r\n                                               >\r\n                                                    <option>Tous</option> \r\n                                                 {marques.map((marque)=>\r\n                                                    <option>{marque}</option>\r\n                                                )} \r\n                                            </Form.Control>\r\n                                        </Form.Group>\r\n                                    </div>\r\n                                    <div className='search-second-row'>\r\n                                       <button className='search-button'>Rechercher</button>\r\n                                    </div>\r\n                                    </form>\r\n                                </Tab.Pane>\r\n                                <Tab.Pane eventKey=\"vehicule\">\r\n                                <form>   \r\n                                <div className='search-first-row'>\r\n                                        <Form.Group className='search-input' controlId=\"exampleForm.ControlSelect1\">\r\n                                            <Form.Label>Marque</Form.Label>\r\n                                            <Form.Control as=\"select\"\r\n                                               value={marqueV}\r\n                                               onChange={handleChangeVehicule('marqueV')}\r\n                                               >\r\n                                                 {marqueVs.map((marque)=>\r\n                                                    <option>{marque}</option>\r\n                                                )} \r\n                                            </Form.Control>\r\n                                        </Form.Group>\r\n                                        <Form.Group className='search-input' controlId=\"exampleForm.ControlSelect1\">\r\n                                            <Form.Label>Modele</Form.Label>\r\n                                            <Form.Control as=\"select\"\r\n                                               value={modele}\r\n                                               onChange={handleChangeVehicule('modele')}\r\n                                               >\r\n                                                 {modeles.map((modele)=>\r\n                                                    <option>{modele}</option>\r\n                                                )} \r\n                                            </Form.Control>\r\n                                        </Form.Group>\r\n                                        <Form.Group className='search-input' controlId=\"exampleForm.ControlSelect1\">\r\n                                            <Form.Label>Motorisation</Form.Label>\r\n                                            <Form.Control as=\"select\"\r\n                                               value={motorisation}\r\n                                               onChange={handleChangeVehicule('motorisation')}\r\n                                               >\r\n                                                 {motorisations.map((motorisation)=>\r\n                                                    <option>{motorisation}</option>\r\n                                                )} \r\n                                            </Form.Control>\r\n                                        </Form.Group>\r\n                                        <Form.Group className='search-input' controlId=\"exampleForm.ControlSelect1\">\r\n                                            <Form.Label>Annee</Form.Label>\r\n                                            <Form.Control as=\"select\"\r\n                                               value={annee}\r\n                                               onChange={handleChangeVehicule('annee')}\r\n                                               >\r\n                                                 {annees.map((annee)=>\r\n                                                    <option>{annee}</option>\r\n                                                )} \r\n                                            </Form.Control>\r\n                                        </Form.Group>\r\n                                        <Form.Group className='search-input' controlId=\"exampleForm.ControlSelect1\">\r\n                                            <Form.Label>Taille</Form.Label>\r\n                                            <Form.Control as=\"select\"\r\n                                               value={taille}\r\n                                               onChange={handleChangeVehicule('taille')}\r\n                                               >\r\n                                                 {tailles.map((taille)=>\r\n                                                    <option>{taille}</option>\r\n                                                )} \r\n                                            </Form.Control>\r\n                                        </Form.Group>\r\n                                    </div>\r\n                                    <div className='search-second-row'>\r\n                                       <button type='submit' className='search-button'>Rechercher</button>\r\n                                    </div>\r\n                                    </form> \r\n                                </Tab.Pane>\r\n                            </Tab.Content>\r\n                        </Tab.Container> \r\n                    </div>\r\n                    <div className='item-6'></div>\r\n                    <div className='item-7'>7\r\n                      <div className='coordonnee'>\r\n                        <div className='card-coordonnee'>\r\n                            <div className='card-col-1'>\r\n                                <img\r\n                                    src={pneus}\r\n                                    width=\"98\"\r\n                                    height=\"78\"\r\n                                    className=\"logo\"\r\n                                    alt=\"Logo Pneu service\"\r\n                                />\r\n                            </div>\r\n                            <div className='card-col-2'>\r\n                                <p style={{fontSize:'1.3em', fontWeight:'800', color:'#888', margin:'0', fontFamily: 'MuseoModerno, cursive'}}>1.Choisissez vos pneus </p>\r\n                                <p style={{fontSize:'1em', fontWeight:'600', color:'#999', fontFamily: 'MuseoModerno, cursive'}}>Parmi un large choix </p>\r\n                            </div>\r\n                        </div>\r\n                        <div className='card-coordonnee'>\r\n                            <div className='card-col-1'>\r\n                                <img\r\n                                    src={commande}\r\n                                    width=\"88\"\r\n                                    height=\"84\"\r\n                                    className=\"logo\"\r\n                                    alt=\"Logo Pneu service\"\r\n                                />\r\n                            </div>\r\n                            <div className='card-col-2'>\r\n                            <p style={{fontSize:'1.3em', fontWeight:'800', color:'#888', margin:'0', fontFamily: 'MuseoModerno, cursive'}}>2.Faites votre commande.</p>\r\n                                <p style={{fontSize:'1em', fontWeight:'600', color:'#999',fontFamily: 'MuseoModerno, cursive'}}>En precisant le nombre de pneu</p>\r\n                            </div>\r\n                        </div>\r\n                        <div className='card-coordonnee'>\r\n                            <div className='card-col-1'>\r\n                                <img\r\n                                    src={payment}\r\n                                    width=\"83\"\r\n                                    height=\"80\"\r\n                                    className=\"logo\"\r\n                                    alt=\"Logo Pneu service\"\r\n                                />\r\n                            </div>\r\n                            <div className='card-col-2'>\r\n                            <p style={{fontSize:'1.3em', fontWeight:'800', color:'#888', margin:'0', fontFamily: 'MuseoModerno, cursive'}}>3.Payez à la livraison </p>\r\n                                <p style={{fontSize:'1em', fontWeight:'600', color:'#999', fontFamily: 'MuseoModerno, cursive'}}>ou au centre de montage agrée.</p>\r\n                            </div>\r\n                        </div>\r\n                     </div>\r\n                     <p>The value for min has to be smaller than the value for max. Fr units can’t be used for the min value, but they can absolutely be used for t</p>\r\n                     <p>The value for min has to be smaller than the value for max. Fr units can’t be used for the min value, but they can absolutely be used for t</p>\r\n                     <p>The value for min has to be smaller than the value for max. Fr units can’t be used for the min value, but they can absolutely be used for t</p>\r\n                     <p>The value for min has to be smaller than the value for max. Fr units can’t be used for the min value, but they can absolutely be used for t</p>\r\n\r\n                  </div>   \r\n            </Styles>\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default Home;\r\n\r\n/**\r\n *  \r\n<Recommandation/>\r\n                  <div className='marques'>\r\n                      <p className='titre-marques'>Nos marques de Pneu Auto</p>\r\n                      <Product_Carousel/>\r\n                  </div>\r\n   \r\n \r\n*/"]},"metadata":{},"sourceType":"module"}